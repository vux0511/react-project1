{"ast":null,"code":"import $k7QOs$react, { useState as $k7QOs$useState, useCallback as $k7QOs$useCallback, useRef as $k7QOs$useRef, useEffect as $k7QOs$useEffect, useContext as $k7QOs$useContext, useMemo as $k7QOs$useMemo } from \"react\";\nimport { useLayoutEffect as $k7QOs$useLayoutEffect, useId as $k7QOs$useId, isIOS as $k7QOs$isIOS, chain as $k7QOs$chain, getScrollParent as $k7QOs$getScrollParent, useLabels as $k7QOs$useLabels, mergeProps as $k7QOs$mergeProps } from \"@react-aria/utils\";\nimport { useLocale as $k7QOs$useLocale, useLocalizedStringFormatter as $k7QOs$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useInteractOutside as $k7QOs$useInteractOutside, useFocusWithin as $k7QOs$useFocusWithin } from \"@react-aria/interactions\";\nimport $k7QOs$reactdom from \"react-dom\";\nimport { useIsSSR as $k7QOs$useIsSSR } from \"@react-aria/ssr\";\nimport { VisuallyHidden as $k7QOs$VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { FocusScope as $k7QOs$FocusScope } from \"@react-aria/focus\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $edcf132a9284368a$var$AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\nconst $edcf132a9284368a$var$FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nconst $edcf132a9284368a$var$CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\nconst $edcf132a9284368a$var$AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\nconst $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {}; // @ts-ignore\n\nlet $edcf132a9284368a$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction $edcf132a9284368a$var$getContainerDimensions(containerNode) {\n  let width = 0,\n      height = 0,\n      top = 0,\n      left = 0;\n  let scroll = {};\n\n  if (containerNode.tagName === 'BODY') {\n    let documentElement = document.documentElement;\n    var ref;\n    width = (ref = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && ref !== void 0 ? ref : documentElement.clientWidth;\n    var ref1;\n    height = (ref1 = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && ref1 !== void 0 ? ref1 : documentElement.clientHeight;\n    scroll.top = documentElement.scrollTop || containerNode.scrollTop;\n    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;\n  } else {\n    ({\n      width: width,\n      height: height,\n      top: top,\n      left: left\n    } = $edcf132a9284368a$var$getOffset(containerNode));\n    scroll.top = containerNode.scrollTop;\n    scroll.left = containerNode.scrollLeft;\n  }\n\n  return {\n    width: width,\n    height: height,\n    scroll: scroll,\n    top: top,\n    left: left\n  };\n}\n\nfunction $edcf132a9284368a$var$getScroll(node) {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction $edcf132a9284368a$var$getDelta(axis, offset, size, containerDimensions, padding) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n  if (startEdgeOffset < 0) return -startEdgeOffset;else if (endEdgeOffset > containerHeight) return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);else return 0;\n}\n\nfunction $edcf132a9284368a$var$getMargins(node) {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction $edcf132a9284368a$var$parsePlacement(input) {\n  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input]) return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];\n  let [placement, crossPlacement] = input.split(' ');\n  let axis = $edcf132a9284368a$var$AXIS[placement] || 'right';\n  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];\n  if (!$edcf132a9284368a$var$AXIS[crossPlacement]) crossPlacement = 'center';\n  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];\n  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];\n  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {\n    placement: placement,\n    crossPlacement: crossPlacement,\n    axis: axis,\n    crossAxis: crossAxis,\n    size: size,\n    crossSize: crossSize\n  };\n  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {\n  let {\n    placement: placement,\n    crossPlacement: crossPlacement,\n    axis: axis,\n    crossAxis: crossAxis,\n    size: size,\n    crossSize: crossSize\n  } = placementInfo;\n  let position = {}; // button position\n\n  position[crossAxis] = childOffset[crossAxis];\n  if (crossPlacement === 'center') //  + (button size / 2) - (overlay size / 2)\n    // at this point the overlay center should match the button center\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;else if (crossPlacement !== crossAxis) //  + (button size) - (overlay size)\n    // at this point the overlay bottom should match the button bottom\n    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];\n  /* else {\n  the overlay top should match the button top\n  } */\n  // add the crossOffset from props\n\n  position[crossAxis] += crossOffset; // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n\n  let minViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2 - overlaySize[crossSize]; // this is button position of center, aligns top of overlay with button center\n\n  let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2; // clamp it into the range of the min/max positions\n\n  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition); // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n\n  if (placement === axis) {\n    // If the container is positioned (non-static), then we use the container's actual\n    // height, as `bottom` will be relative to this height.  But if the container is static,\n    // then it can only be the `document.body`, and `bottom` will be relative to _its_\n    // container, which should be as large as boundaryDimensions.\n    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];\n    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n  } else position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n\n  return position;\n}\n\nfunction $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {\n  return position.top != null ? Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (containerOffsetWithBoundary.top + position.top) - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n  ) : Math.max(0, childOffset.top + containerOffsetWithBoundary.top - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n  );\n}\n\nfunction $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {\n  let {\n    placement: placement,\n    axis: axis,\n    size: size\n  } = placementInfo;\n  if (placement === axis) return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);\n}\n\nfunction $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight) {\n  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);\n  let {\n    size: size,\n    crossAxis: crossAxis,\n    crossSize: crossSize,\n    placement: placement,\n    crossPlacement: crossPlacement\n  } = placementInfo;\n  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  let normalizedOffset = offset;\n  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo); // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);\n    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo); // If the available space for the flipped position is greater than the original available space, flip.\n\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);\n  if (userSetMaxHeight && userSetMaxHeight < maxHeight) maxHeight = userSetMaxHeight;\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n  let arrowPosition = {};\n  arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;\n  return {\n    position: position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\nfunction $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {\n  let {\n    placement: placement,\n    targetNode: targetNode,\n    overlayNode: overlayNode,\n    scrollNode: scrollNode,\n    padding: padding,\n    shouldFlip: shouldFlip,\n    boundaryElement: boundaryElement,\n    offset: offset,\n    crossOffset: crossOffset,\n    maxHeight: maxHeight\n  } = opts;\n  let container = overlayNode instanceof HTMLElement && overlayNode.offsetParent || document.body;\n  let isBodyContainer = container.tagName === 'BODY';\n  const containerPositionStyle = window.getComputedStyle(container).position;\n  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n  let childOffset = isBodyContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    let {\n      marginTop: marginTop,\n      marginLeft: marginLeft\n    } = window.getComputedStyle(targetNode);\n    childOffset.top += parseInt(marginTop, 10) || 0;\n    childOffset.left += parseInt(marginLeft, 10) || 0;\n  }\n\n  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);\n  let margins = $edcf132a9284368a$var$getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);\n  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary = boundaryElement.tagName === 'BODY' ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);\n  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight);\n}\n\nfunction $edcf132a9284368a$var$getOffset(node) {\n  let {\n    top: top,\n    left: left,\n    width: width,\n    height: height\n  } = node.getBoundingClientRect();\n  let {\n    scrollTop: scrollTop,\n    scrollLeft: scrollLeft,\n    clientTop: clientTop,\n    clientLeft: clientLeft\n  } = document.documentElement;\n  return {\n    top: top + scrollTop - clientTop,\n    left: left + scrollLeft - clientLeft,\n    width: width,\n    height: height\n  };\n}\n\nfunction $edcf132a9284368a$var$getPosition(node, parent) {\n  let style = window.getComputedStyle(node);\n  let offset;\n\n  if (style.position === 'fixed') {\n    let {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    } = node.getBoundingClientRect();\n    offset = {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    };\n  } else {\n    offset = $edcf132a9284368a$var$getOffset(node);\n    let parentOffset = $edcf132a9284368a$var$getOffset(parent);\n    let parentStyle = window.getComputedStyle(parent);\n    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;\n    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;\n    offset.top -= parentOffset.top;\n    offset.left -= parentOffset.left;\n  }\n\n  offset.top -= parseInt(style.marginTop, 10) || 0;\n  offset.left -= parseInt(style.marginLeft, 10) || 0;\n  return offset;\n}\n\nconst $dd149f63282afbbf$export$f6211563215e3b37 = new WeakMap();\n\nfunction $dd149f63282afbbf$export$18fc8428861184da(opts) {\n  let {\n    triggerRef: triggerRef,\n    isOpen: isOpen,\n    onClose: onClose\n  } = opts;\n  $k7QOs$useEffect(() => {\n    if (!isOpen) return;\n\n    let onScroll = e => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target; // window is not a Node and doesn't have contain, but window contains everything\n\n      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;\n      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);\n      if (onCloseHandler) onCloseHandler();\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n} // @ts-ignore\n\n\nlet $2a41e45df1593e64$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {\n  let {\n    direction: direction\n  } = $k7QOs$useLocale();\n  let {\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom',\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    onClose: onClose,\n    maxHeight: maxHeight\n  } = props;\n  let [position, setPosition] = $k7QOs$useState({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined\n  });\n  let deps = [shouldUpdatePosition, placement, overlayRef.current, targetRef.current, scrollRef.current, containerPadding, shouldFlip, boundaryElement, offset, crossOffset, isOpen, direction, maxHeight];\n  let updatePosition = $k7QOs$useCallback(() => {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) return;\n    setPosition($edcf132a9284368a$export$b3ceb0cbf1056d98({\n      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),\n      overlayNode: overlayRef.current,\n      targetNode: targetRef.current,\n      scrollNode: scrollRef.current,\n      padding: containerPadding,\n      shouldFlip: shouldFlip,\n      boundaryElement: boundaryElement,\n      offset: offset,\n      crossOffset: crossOffset,\n      maxHeight: maxHeight\n    }));\n  }, deps); // Update position when anything changes\n\n  $k7QOs$useLayoutEffect(updatePosition, deps); // Update position on window resize\n\n  $2a41e45df1593e64$var$useResize(updatePosition); // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n\n  let isResizing = $k7QOs$useRef(false);\n  $k7QOs$useLayoutEffect(() => {\n    let timeout;\n\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n      updatePosition();\n    };\n\n    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener('resize', onResize);\n    return () => {\n      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n  let close = $k7QOs$useCallback(() => {\n    if (!isResizing.current) onClose();\n  }, [onClose, isResizing]); // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n\n  $dd149f63282afbbf$export$18fc8428861184da({\n    triggerRef: targetRef,\n    isOpen: isOpen,\n    onClose: onClose ? close : undefined\n  });\n  return {\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000,\n        ...position.position,\n        maxHeight: position.maxHeight\n      }\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    updatePosition: updatePosition\n  };\n}\n\nfunction $2a41e45df1593e64$var$useResize(onResize) {\n  $k7QOs$useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction $2a41e45df1593e64$var$translateRTL(position, direction) {\n  if (direction === 'rtl') return position.replace('start', 'right').replace('end', 'left');\n  return position.replace('start', 'left').replace('end', 'right');\n}\n\nconst $a11501f3d1d39e6c$var$visibleOverlays = [];\n\nfunction $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {\n  let {\n    onClose: onClose,\n    shouldCloseOnBlur: shouldCloseOnBlur,\n    isOpen: isOpen,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  } = props; // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n\n  $k7QOs$useEffect(() => {\n    if (isOpen) $a11501f3d1d39e6c$var$visibleOverlays.push(ref);\n    return () => {\n      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);\n      if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);\n    };\n  }, [isOpen, ref]); // Only hide the overlay when it is the topmost visible overlay in the stack.\n\n  let onHide = () => {\n    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();\n  };\n\n  let onInteractOutsideStart = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n\n  let onInteractOutside = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      onHide();\n    }\n  }; // Handle the escape key\n\n\n  let onKeyDown = e => {\n    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  }; // Handle clicking outside the overlay to close it\n\n\n  $k7QOs$useInteractOutside({\n    ref: ref,\n    onInteractOutside: isDismissable ? onInteractOutside : null,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = $k7QOs$useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: e => {\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose();\n    }\n  });\n\n  let onPointerDownUnderlay = e => {\n    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n    if (e.target === e.currentTarget) e.preventDefault();\n  };\n\n  return {\n    overlayProps: {\n      onKeyDown: onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\n\nfunction $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {\n  let {\n    type: type\n  } = props;\n  let {\n    isOpen: isOpen\n  } = state; // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll\n  // without forcing users to pass onClose.\n\n  $k7QOs$useEffect(() => {\n    if (ref && ref.current) $dd149f63282afbbf$export$f6211563215e3b37.set(ref.current, state.close);\n  }); // Aria 1.1 supports multiple values for aria-haspopup other than just menus.\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\n  // However, we only add it for menus for now because screen readers often\n  // announce it as a menu even for other values.\n\n  let ariaHasPopup = undefined;\n  if (type === 'menu') ariaHasPopup = true;else if (type === 'listbox') ariaHasPopup = 'listbox';\n  let overlayId = $k7QOs$useId();\n  return {\n    triggerProps: {\n      'aria-haspopup': ariaHasPopup,\n      'aria-expanded': isOpen,\n      'aria-controls': isOpen ? overlayId : null,\n      onPress: state.toggle\n    },\n    overlayProps: {\n      id: overlayId\n    }\n  };\n} // @ts-ignore\n\n\nconst $49c51c25361d4cd2$var$visualViewport = typeof window !== 'undefined' && window.visualViewport; // HTML input types that do not cause the software keyboard to appear.\n\nconst $49c51c25361d4cd2$var$nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\n\nfunction $49c51c25361d4cd2$export$ee0f7cc6afcd1c18() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    isDisabled: isDisabled\n  } = options;\n  $k7QOs$useLayoutEffect(() => {\n    if (isDisabled) return;\n    if ($k7QOs$isIOS()) return $49c51c25361d4cd2$var$preventScrollMobileSafari();else return $49c51c25361d4cd2$var$preventScrollStandard();\n  }, [isDisabled]);\n} // For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\n\n\nfunction $49c51c25361d4cd2$var$preventScrollStandard() {\n  return $k7QOs$chain($49c51c25361d4cd2$var$setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, 'overflow', 'hidden'));\n} // Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\n\n\nfunction $49c51c25361d4cd2$var$preventScrollMobileSafari() {\n  let scrollable;\n  let lastY = 0;\n\n  let onTouchStart = e => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = $k7QOs$getScrollParent(e.target);\n    if (scrollable === document.documentElement && scrollable === document.body) return;\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = e => {\n    // Prevent scrolling the window.\n    if (scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    } // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n\n\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) e.preventDefault();\n    lastY = y;\n  };\n\n  let onTouchEnd = e => {\n    let target = e.target; // Apply this change if we're not already focused on the target element\n\n    if ($49c51c25361d4cd2$var$willOpenKeyboard(target) && target !== document.activeElement) {\n      e.preventDefault(); // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = e => {\n    let target = e.target;\n\n    if ($49c51c25361d4cd2$var$willOpenKeyboard(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = ''; // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n\n        if ($49c51c25361d4cd2$var$visualViewport) {\n          if ($49c51c25361d4cd2$var$visualViewport.height < window.innerHeight) // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              $49c51c25361d4cd2$var$scrollIntoView(target);\n            });else // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            $49c51c25361d4cd2$var$visualViewport.addEventListener('resize', () => $49c51c25361d4cd2$var$scrollIntoView(target), {\n              once: true\n            });\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  }; // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n\n\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n  let restoreStyles = $k7QOs$chain($49c51c25361d4cd2$var$setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, 'overflow', 'hidden'), $49c51c25361d4cd2$var$setStyle(document.body, 'marginTop', `-${scrollY}px`)); // Scroll to the top. The negative margin on the body will make this appear the same.\n\n  window.scrollTo(0, 0);\n  let removeEvents = $k7QOs$chain($49c51c25361d4cd2$var$addEvent(document, 'touchstart', onTouchStart, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'touchmove', onTouchMove, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'touchend', onTouchEnd, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'focus', onFocus, true), $49c51c25361d4cd2$var$addEvent(window, 'scroll', onWindowScroll));\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n} // Sets a CSS property on an element, and returns a function to revert it to the previous value.\n\n\nfunction $49c51c25361d4cd2$var$setStyle(element, style, value) {\n  let cur = element.style[style];\n  element.style[style] = value;\n  return () => {\n    element.style[style] = cur;\n  };\n} // Adds an event listener to an element, and returns a function to remove it.\n\n\nfunction $49c51c25361d4cd2$var$addEvent(target, event, handler, options) {\n  target.addEventListener(event, handler, options);\n  return () => {\n    target.removeEventListener(event, handler, options);\n  };\n}\n\nfunction $49c51c25361d4cd2$var$scrollIntoView(target) {\n  let root = document.scrollingElement || document.documentElement;\n\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = $k7QOs$getScrollParent(target);\n\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      if (targetTop > scrollableTop + target.clientHeight) scrollable.scrollTop += targetTop - scrollableTop;\n    }\n\n    target = scrollable.parentElement;\n  }\n}\n\nfunction $49c51c25361d4cd2$var$willOpenKeyboard(target) {\n  return target instanceof HTMLInputElement && !$49c51c25361d4cd2$var$nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n}\n\nconst $f57aed4a881a3485$var$Context = /*#__PURE__*/$k7QOs$react.createContext(null);\n\nfunction $f57aed4a881a3485$export$178405afcd8c5eb(props) {\n  let {\n    children: children\n  } = props;\n  let parent = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  let [modalCount, setModalCount] = $k7QOs$useState(0);\n  let context = $k7QOs$useMemo(() => ({\n    parent: parent,\n    modalCount: modalCount,\n\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) parent.addModal();\n    },\n\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) parent.removeModal();\n    }\n\n  }), [parent, modalCount]);\n  return /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$var$Context.Provider, {\n    value: context\n  }, children);\n}\n\nfunction $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {\n  let context = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : null\n    }\n  };\n}\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\n\n\nfunction $f57aed4a881a3485$var$OverlayContainerDOM(props) {\n  let {\n    modalProviderProps: modalProviderProps\n  } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();\n  return /*#__PURE__*/$k7QOs$react.createElement(\"div\", {\n    \"data-overlay-container\": true,\n    ...props,\n    ...modalProviderProps\n  });\n}\n\nfunction $f57aed4a881a3485$export$bf688221f59024e5(props) {\n  return /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));\n}\n\nfunction $f57aed4a881a3485$export$b47c3594eab58386(props) {\n  let isSSR = $k7QOs$useIsSSR();\n  let {\n    portalContainer = isSSR ? null : document.body,\n    ...rest\n  } = props;\n  $k7QOs$react.useEffect(() => {\n    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest('[data-overlay-container]')) throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n  }, [portalContainer]);\n  if (!portalContainer) return null;\n  let contents = /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);\n  return /*#__PURE__*/$k7QOs$reactdom.createPortal(contents, portalContainer);\n}\n\nfunction $f57aed4a881a3485$export$33ffd74ebf07f060(options) {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  if (!context) throw new Error('Modal is not contained within a provider');\n  $k7QOs$useEffect(() => {\n    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent) return; // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) context.parent.removeModal();\n    };\n  }, [context, context.parent, options === null || options === void 0 ? void 0 : options.isDisabled]);\n  return {\n    modalProps: {\n      'data-ismodal': !(options === null || options === void 0 ? void 0 : options.isDisabled)\n    }\n  };\n}\n\nvar $61fe14465afefc5e$exports = {};\nvar $773d5888b972f1cf$exports = {};\n$773d5888b972f1cf$exports = {\n  \"dismiss\": `تجاهل`\n};\nvar $d11f19852b941573$exports = {};\n$d11f19852b941573$exports = {\n  \"dismiss\": `Отхвърляне`\n};\nvar $b983974c2ee1efb3$exports = {};\n$b983974c2ee1efb3$exports = {\n  \"dismiss\": `Odstranit`\n};\nvar $5809cc9d4e92de73$exports = {};\n$5809cc9d4e92de73$exports = {\n  \"dismiss\": `Luk`\n};\nvar $c68c2e4fc74398d1$exports = {};\n$c68c2e4fc74398d1$exports = {\n  \"dismiss\": `Schließen`\n};\nvar $0898b4c153db2b77$exports = {};\n$0898b4c153db2b77$exports = {\n  \"dismiss\": `Απόρριψη`\n};\nvar $6d74810286a15183$exports = {};\n$6d74810286a15183$exports = {\n  \"dismiss\": `Dismiss`\n};\nvar $309d73dc65f78055$exports = {};\n$309d73dc65f78055$exports = {\n  \"dismiss\": `Descartar`\n};\nvar $44ad94f7205cf593$exports = {};\n$44ad94f7205cf593$exports = {\n  \"dismiss\": `Lõpeta`\n};\nvar $7c28f5687f0779a9$exports = {};\n$7c28f5687f0779a9$exports = {\n  \"dismiss\": `Hylkää`\n};\nvar $e6d75df4b68bd73a$exports = {};\n$e6d75df4b68bd73a$exports = {\n  \"dismiss\": `Rejeter`\n};\nvar $87505c9dab186d0f$exports = {};\n$87505c9dab186d0f$exports = {\n  \"dismiss\": `התעלם`\n};\nvar $553439c3ffb3e492$exports = {};\n$553439c3ffb3e492$exports = {\n  \"dismiss\": `Odbaci`\n};\nvar $74cf411061b983a2$exports = {};\n$74cf411061b983a2$exports = {\n  \"dismiss\": `Elutasítás`\n};\nvar $e933f298574dc435$exports = {};\n$e933f298574dc435$exports = {\n  \"dismiss\": `Ignora`\n};\nvar $ac91fc9fe02f71f6$exports = {};\n$ac91fc9fe02f71f6$exports = {\n  \"dismiss\": `閉じる`\n};\nvar $52b96f86422025af$exports = {};\n$52b96f86422025af$exports = {\n  \"dismiss\": `무시`\n};\nvar $c0d724c3e51dafa6$exports = {};\n$c0d724c3e51dafa6$exports = {\n  \"dismiss\": `Atmesti`\n};\nvar $c92899672a3fe72e$exports = {};\n$c92899672a3fe72e$exports = {\n  \"dismiss\": `Nerādīt`\n};\nvar $9f576b39d8e7a9d6$exports = {};\n$9f576b39d8e7a9d6$exports = {\n  \"dismiss\": `Lukk`\n};\nvar $9d025808aeec81a7$exports = {};\n$9d025808aeec81a7$exports = {\n  \"dismiss\": `Negeren`\n};\nvar $fce709921e2c0fa6$exports = {};\n$fce709921e2c0fa6$exports = {\n  \"dismiss\": `Zignoruj`\n};\nvar $2599cf0c4ab37f59$exports = {};\n$2599cf0c4ab37f59$exports = {\n  \"dismiss\": `Descartar`\n};\nvar $3c220ae7ef8a35fd$exports = {};\n$3c220ae7ef8a35fd$exports = {\n  \"dismiss\": `Dispensar`\n};\nvar $93562b5094072f54$exports = {};\n$93562b5094072f54$exports = {\n  \"dismiss\": `Revocare`\n};\nvar $cd9e2abd0d06c7b4$exports = {};\n$cd9e2abd0d06c7b4$exports = {\n  \"dismiss\": `Пропустить`\n};\nvar $45375701f409adf1$exports = {};\n$45375701f409adf1$exports = {\n  \"dismiss\": `Zrušiť`\n};\nvar $27fab53a576de9dd$exports = {};\n$27fab53a576de9dd$exports = {\n  \"dismiss\": `Opusti`\n};\nvar $4438748d9952e7c7$exports = {};\n$4438748d9952e7c7$exports = {\n  \"dismiss\": `Odbaci`\n};\nvar $0936d7347ef4da4c$exports = {};\n$0936d7347ef4da4c$exports = {\n  \"dismiss\": `Avvisa`\n};\nvar $29700c92185d38f8$exports = {};\n$29700c92185d38f8$exports = {\n  \"dismiss\": `Kapat`\n};\nvar $662ccaf2be4c25b3$exports = {};\n$662ccaf2be4c25b3$exports = {\n  \"dismiss\": `Скасувати`\n};\nvar $d80a27deda7cdb3c$exports = {};\n$d80a27deda7cdb3c$exports = {\n  \"dismiss\": `取消`\n};\nvar $2b2734393847c884$exports = {};\n$2b2734393847c884$exports = {\n  \"dismiss\": `關閉`\n};\n$61fe14465afefc5e$exports = {\n  \"ar-AE\": $773d5888b972f1cf$exports,\n  \"bg-BG\": $d11f19852b941573$exports,\n  \"cs-CZ\": $b983974c2ee1efb3$exports,\n  \"da-DK\": $5809cc9d4e92de73$exports,\n  \"de-DE\": $c68c2e4fc74398d1$exports,\n  \"el-GR\": $0898b4c153db2b77$exports,\n  \"en-US\": $6d74810286a15183$exports,\n  \"es-ES\": $309d73dc65f78055$exports,\n  \"et-EE\": $44ad94f7205cf593$exports,\n  \"fi-FI\": $7c28f5687f0779a9$exports,\n  \"fr-FR\": $e6d75df4b68bd73a$exports,\n  \"he-IL\": $87505c9dab186d0f$exports,\n  \"hr-HR\": $553439c3ffb3e492$exports,\n  \"hu-HU\": $74cf411061b983a2$exports,\n  \"it-IT\": $e933f298574dc435$exports,\n  \"ja-JP\": $ac91fc9fe02f71f6$exports,\n  \"ko-KR\": $52b96f86422025af$exports,\n  \"lt-LT\": $c0d724c3e51dafa6$exports,\n  \"lv-LV\": $c92899672a3fe72e$exports,\n  \"nb-NO\": $9f576b39d8e7a9d6$exports,\n  \"nl-NL\": $9d025808aeec81a7$exports,\n  \"pl-PL\": $fce709921e2c0fa6$exports,\n  \"pt-BR\": $2599cf0c4ab37f59$exports,\n  \"pt-PT\": $3c220ae7ef8a35fd$exports,\n  \"ro-RO\": $93562b5094072f54$exports,\n  \"ru-RU\": $cd9e2abd0d06c7b4$exports,\n  \"sk-SK\": $45375701f409adf1$exports,\n  \"sl-SI\": $27fab53a576de9dd$exports,\n  \"sr-SP\": $4438748d9952e7c7$exports,\n  \"sv-SE\": $0936d7347ef4da4c$exports,\n  \"tr-TR\": $29700c92185d38f8$exports,\n  \"uk-UA\": $662ccaf2be4c25b3$exports,\n  \"zh-CN\": $d80a27deda7cdb3c$exports,\n  \"zh-TW\": $2b2734393847c884$exports\n};\n\nfunction $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {\n  let {\n    onDismiss: onDismiss,\n    ...otherProps\n  } = props;\n  let stringFormatter = $k7QOs$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($61fe14465afefc5e$exports));\n  let labels = $k7QOs$useLabels(otherProps, stringFormatter.format('dismiss'));\n\n  let onClick = () => {\n    if (onDismiss) onDismiss();\n  };\n\n  return /*#__PURE__*/$k7QOs$react.createElement($k7QOs$VisuallyHidden, null, /*#__PURE__*/$k7QOs$react.createElement(\"button\", { ...labels,\n    tabIndex: -1,\n    onClick: onClick\n  }));\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n// Keeps a ref count of all hidden elements. Added to when hiding an element, and\n// subtracted from when showing it again. When it reaches zero, aria-hidden is removed.\n\n\nlet $5e3802645cc19319$var$refCountMap = new WeakMap();\n\nfunction $5e3802645cc19319$export$1c3ebcada18427bf(targets) {\n  let root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n  let visibleNodes = new Set(targets);\n  let hiddenNodes = new Set();\n  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode(node) {\n      // If this node is a live announcer, add it to the set of nodes to keep visible.\n      if ((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true') visibleNodes.add(node); // Skip this node and its children if it is one of the target nodes, or a live announcer.\n      // Also skip children of already hidden nodes, as aria-hidden is recursive. An exception is\n      // made for elements with role=\"row\" since VoiceOver on iOS has issues hiding elements with role=\"row\".\n      // For that case we want to hide the cells inside as well (https://bugs.webkit.org/show_bug.cgi?id=222623).\n\n      if (visibleNodes.has(node) || hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute('role') !== 'row') return NodeFilter.FILTER_REJECT; // Skip this node but continue to children if one of the targets is inside the node.\n\n      if (targets.some(target => node.contains(target))) return NodeFilter.FILTER_SKIP;\n      return NodeFilter.FILTER_ACCEPT;\n    }\n\n  });\n\n  let hide = node => {\n    var ref;\n    let refCount = (ref = $5e3802645cc19319$var$refCountMap.get(node)) !== null && ref !== void 0 ? ref : 0; // If already aria-hidden, and the ref count is zero, then this element\n    // was already hidden and there's nothing for us to do.\n\n    if (node.getAttribute('aria-hidden') === 'true' && refCount === 0) return;\n    if (refCount === 0) node.setAttribute('aria-hidden', 'true');\n    hiddenNodes.add(node);\n    $5e3802645cc19319$var$refCountMap.set(node, refCount + 1);\n  };\n\n  let node1 = walker.nextNode();\n\n  while (node1 != null) {\n    hide(node1);\n    node1 = walker.nextNode();\n  }\n\n  let observer = new MutationObserver(changes => {\n    for (let change of changes) {\n      if (change.type !== 'childList' || change.addedNodes.length === 0) continue; // If the parent element of the added nodes is not within one of the targets,\n      // and not already inside a hidden node, hide all of the new children.\n\n      if (![...visibleNodes, ...hiddenNodes].some(node => node.contains(change.target))) for (let node2 of change.addedNodes) {\n        if ((node2 instanceof HTMLElement || node2 instanceof SVGElement) && node2.dataset.liveAnnouncer === 'true') visibleNodes.add(node2);else if (node2 instanceof Element) hide(node2);\n      }\n    }\n  });\n  observer.observe(root, {\n    childList: true,\n    subtree: true\n  });\n  return () => {\n    observer.disconnect();\n\n    for (let node of hiddenNodes) {\n      let count = $5e3802645cc19319$var$refCountMap.get(node);\n\n      if (count === 1) {\n        node.removeAttribute('aria-hidden');\n        $5e3802645cc19319$var$refCountMap.delete(node);\n      } else $5e3802645cc19319$var$refCountMap.set(node, count - 1);\n    }\n  };\n}\n\nfunction $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {\n  let {\n    triggerRef: triggerRef,\n    popoverRef: popoverRef,\n    isNonModal: isNonModal,\n    ...otherProps\n  } = props;\n  let {\n    overlayProps: overlayProps\n  } = $a11501f3d1d39e6c$export$ea8f71083e90600f({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur: true,\n    isDismissable: true\n  }, popoverRef);\n  let {\n    overlayProps: positionProps,\n    arrowProps: arrowProps\n  } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({ ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen\n  });\n  $k7QOs$useEffect(() => {\n    if (state.isOpen && !isNonModal) return $5e3802645cc19319$export$1c3ebcada18427bf([popoverRef.current]);\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: $k7QOs$mergeProps(overlayProps, positionProps),\n    arrowProps: arrowProps\n  };\n}\n\nconst $337b884510726a0d$var$OverlayContext = /*#__PURE__*/$k7QOs$react.createContext(null);\n\nfunction $337b884510726a0d$export$c6fdb837b070b4ff(props) {\n  let isSSR = $k7QOs$useIsSSR();\n  let {\n    portalContainer = isSSR ? null : document.body\n  } = props;\n  let [contain, setContain] = $k7QOs$useState(false);\n  if (!portalContainer) return null;\n  let contents = /*#__PURE__*/$k7QOs$react.createElement($337b884510726a0d$var$OverlayContext.Provider, {\n    value: setContain\n  }, /*#__PURE__*/$k7QOs$react.createElement($k7QOs$FocusScope, {\n    restoreFocus: true,\n    contain: contain\n  }, props.children));\n  return /*#__PURE__*/$k7QOs$reactdom.createPortal(contents, portalContainer);\n}\n\nfunction $337b884510726a0d$export$14c98a7594375490() {\n  let setContain = $k7QOs$useContext($337b884510726a0d$var$OverlayContext);\n  $k7QOs$useLayoutEffect(() => {\n    setContain === null || setContain === void 0 ? void 0 : setContain(true);\n  }, [setContain]);\n}\n\nfunction $8ac8429251c45e4b$export$dbc0f175b25fb0fb(props, state, ref) {\n  let {\n    overlayProps: overlayProps,\n    underlayProps: underlayProps\n  } = $a11501f3d1d39e6c$export$ea8f71083e90600f({ ...props,\n    isOpen: state.isOpen,\n    onClose: state.close\n  }, ref);\n  $49c51c25361d4cd2$export$ee0f7cc6afcd1c18({\n    isDisabled: !state.isOpen\n  });\n  $337b884510726a0d$export$14c98a7594375490();\n  $k7QOs$useEffect(() => {\n    if (state.isOpen) return $5e3802645cc19319$export$1c3ebcada18427bf([ref.current]);\n  }, [state.isOpen, ref]);\n  return {\n    modalProps: $k7QOs$mergeProps(overlayProps),\n    underlayProps: underlayProps\n  };\n}\n\nexport { $2a41e45df1593e64$export$d39e1813b3bdd0e1 as useOverlayPosition, $a11501f3d1d39e6c$export$ea8f71083e90600f as useOverlay, $628037886ba31236$export$f9d5c8beee7d008d as useOverlayTrigger, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18 as usePreventScroll, $f57aed4a881a3485$export$178405afcd8c5eb as ModalProvider, $f57aed4a881a3485$export$d9aaed4c3ece1bc0 as useModalProvider, $f57aed4a881a3485$export$bf688221f59024e5 as OverlayProvider, $f57aed4a881a3485$export$b47c3594eab58386 as OverlayContainer, $f57aed4a881a3485$export$33ffd74ebf07f060 as useModal, $86ea4cb521eb2e37$export$2317d149ed6f78c4 as DismissButton, $5e3802645cc19319$export$1c3ebcada18427bf as ariaHideOutside, $f2f8a6077418541e$export$542a6fd13ac93354 as usePopover, $8ac8429251c45e4b$export$dbc0f175b25fb0fb as useModalOverlay, $337b884510726a0d$export$c6fdb837b070b4ff as Overlay, $337b884510726a0d$export$14c98a7594375490 as useOverlayFocusContain };","map":{"version":3,"mappings":"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","names":["$edcf132a9284368a$var$AXIS","top","bottom","left","right","$edcf132a9284368a$var$FLIPPED_DIRECTION","$edcf132a9284368a$var$CROSS_AXIS","$edcf132a9284368a$var$AXIS_SIZE","$edcf132a9284368a$var$PARSED_PLACEMENT_CACHE","$edcf132a9284368a$var$visualViewport","window","visualViewport","$edcf132a9284368a$var$getContainerDimensions","containerNode","width","height","scroll","tagName","documentElement","document","ref","clientWidth","ref1","clientHeight","scrollTop","scrollLeft","$edcf132a9284368a$var$getOffset","$edcf132a9284368a$var$getScroll","node","scrollWidth","scrollHeight","$edcf132a9284368a$var$getDelta","axis","offset","size","containerDimensions","padding","containerScroll","containerHeight","startEdgeOffset","endEdgeOffset","Math","max","$edcf132a9284368a$var$getMargins","style","getComputedStyle","parseInt","marginTop","marginBottom","marginLeft","marginRight","$edcf132a9284368a$var$parsePlacement","input","placement","crossPlacement","split","crossAxis","crossSize","$edcf132a9284368a$var$computePosition","childOffset","boundaryDimensions","overlaySize","placementInfo","crossOffset","containerOffsetWithBoundary","isContainerPositioned","position","minViablePosition","maxViablePosition","min","floor","$edcf132a9284368a$var$getMaxHeight","margins","$edcf132a9284368a$var$getAvailableSpace","$edcf132a9284368a$export$6839422d1f33cee9","placementInput","scrollSize","flip","userSetMaxHeight","normalizedOffset","space","flippedPlacementInfo","flippedPosition","flippedSpace","delta","maxHeight","arrowPosition","arrowOffsetLeft","arrowOffsetTop","$edcf132a9284368a$export$b3ceb0cbf1056d98","opts","targetNode","overlayNode","scrollNode","shouldFlip","boundaryElement","container","HTMLElement","offsetParent","body","isBodyContainer","containerPositionStyle","$edcf132a9284368a$var$getPosition","getBoundingClientRect","clientTop","clientLeft","parent","parentOffset","parentStyle","borderTopWidth","borderLeftWidth","$dd149f63282afbbf$export$f6211563215e3b37","WeakMap","$dd149f63282afbbf$export$18fc8428861184da","triggerRef","isOpen","onClose","$k7QOs$useEffect","onScroll","e","target","current","Node","contains","onCloseHandler","get","addEventListener","removeEventListener","$2a41e45df1593e64$var$visualViewport","$2a41e45df1593e64$export$d39e1813b3bdd0e1","props","direction","$k7QOs$useLocale","targetRef","overlayRef","scrollRef","containerPadding","shouldUpdatePosition","setPosition","$k7QOs$useState","undefined","deps","updatePosition","$k7QOs$useCallback","$2a41e45df1593e64$var$translateRTL","$k7QOs$useLayoutEffect","$2a41e45df1593e64$var$useResize","isResizing","$k7QOs$useRef","timeout","onResize","clearTimeout","setTimeout","close","overlayProps","zIndex","arrowProps","replace","$a11501f3d1d39e6c$var$visibleOverlays","$a11501f3d1d39e6c$export$ea8f71083e90600f","shouldCloseOnBlur","isDismissable","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","push","index","indexOf","splice","onHide","length","onInteractOutsideStart","stopPropagation","preventDefault","onInteractOutside","onKeyDown","key","$k7QOs$useInteractOutside","focusWithinProps","$k7QOs$useFocusWithin","isDisabled","onBlurWithin","relatedTarget","onPointerDownUnderlay","currentTarget","underlayProps","onPointerDown","$628037886ba31236$export$f9d5c8beee7d008d","state","type","set","ariaHasPopup","overlayId","$k7QOs$useId","triggerProps","onPress","toggle","id","$49c51c25361d4cd2$var$visualViewport","$49c51c25361d4cd2$var$nonTextInputTypes","Set","$49c51c25361d4cd2$export$ee0f7cc6afcd1c18","options","$k7QOs$isIOS","$49c51c25361d4cd2$var$preventScrollMobileSafari","$49c51c25361d4cd2$var$preventScrollStandard","$k7QOs$chain","$49c51c25361d4cd2$var$setStyle","innerWidth","scrollable","lastY","onTouchStart","$k7QOs$getScrollParent","changedTouches","pageY","onTouchMove","y","onTouchEnd","$49c51c25361d4cd2$var$willOpenKeyboard","activeElement","transform","focus","requestAnimationFrame","onFocus","innerHeight","$49c51c25361d4cd2$var$scrollIntoView","once","onWindowScroll","scrollTo","scrollX","pageXOffset","scrollY","pageYOffset","restoreStyles","removeEvents","$49c51c25361d4cd2$var$addEvent","passive","capture","element","value","cur","event","handler","root","scrollingElement","scrollableTop","targetTop","parentElement","HTMLInputElement","has","HTMLTextAreaElement","isContentEditable","$f57aed4a881a3485$var$Context","$k7QOs$react","createContext","$f57aed4a881a3485$export$178405afcd8c5eb","children","$k7QOs$useContext","modalCount","setModalCount","context","$k7QOs$useMemo","addModal","count","removeModal","Provider","$f57aed4a881a3485$export$d9aaed4c3ece1bc0","modalProviderProps","$f57aed4a881a3485$var$OverlayContainerDOM","$f57aed4a881a3485$export$bf688221f59024e5","$f57aed4a881a3485$export$b47c3594eab58386","isSSR","$k7QOs$useIsSSR","portalContainer","rest","useEffect","closest","Error","contents","$k7QOs$reactdom","createPortal","$f57aed4a881a3485$export$33ffd74ebf07f060","modalProps","$773d5888b972f1cf$exports","$d11f19852b941573$exports","$b983974c2ee1efb3$exports","$5809cc9d4e92de73$exports","$c68c2e4fc74398d1$exports","$0898b4c153db2b77$exports","$6d74810286a15183$exports","$309d73dc65f78055$exports","$44ad94f7205cf593$exports","$7c28f5687f0779a9$exports","$e6d75df4b68bd73a$exports","$87505c9dab186d0f$exports","$553439c3ffb3e492$exports","$74cf411061b983a2$exports","$e933f298574dc435$exports","$ac91fc9fe02f71f6$exports","$52b96f86422025af$exports","$c0d724c3e51dafa6$exports","$c92899672a3fe72e$exports","$9f576b39d8e7a9d6$exports","$9d025808aeec81a7$exports","$fce709921e2c0fa6$exports","$2599cf0c4ab37f59$exports","$3c220ae7ef8a35fd$exports","$93562b5094072f54$exports","$cd9e2abd0d06c7b4$exports","$45375701f409adf1$exports","$27fab53a576de9dd$exports","$4438748d9952e7c7$exports","$0936d7347ef4da4c$exports","$29700c92185d38f8$exports","$662ccaf2be4c25b3$exports","$d80a27deda7cdb3c$exports","$2b2734393847c884$exports","$61fe14465afefc5e$exports","$86ea4cb521eb2e37$export$2317d149ed6f78c4","onDismiss","otherProps","stringFormatter","$k7QOs$useLocalizedStringFormatter","labels","$k7QOs$useLabels","format","onClick","$k7QOs$VisuallyHidden","tabIndex","$5e3802645cc19319$var$refCountMap","$5e3802645cc19319$export$1c3ebcada18427bf","targets","visibleNodes","hiddenNodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","SVGElement","dataset","liveAnnouncer","add","getAttribute","FILTER_REJECT","some","FILTER_SKIP","FILTER_ACCEPT","hide","refCount","setAttribute","node1","nextNode","observer","MutationObserver","changes","change","addedNodes","node2","Element","observe","childList","subtree","disconnect","removeAttribute","delete","$f2f8a6077418541e$export$542a6fd13ac93354","popoverRef","isNonModal","positionProps","popoverProps","$k7QOs$mergeProps","$337b884510726a0d$var$OverlayContext","$337b884510726a0d$export$c6fdb837b070b4ff","contain","setContain","$k7QOs$FocusScope","restoreFocus","$337b884510726a0d$export$14c98a7594375490","$8ac8429251c45e4b$export$dbc0f175b25fb0fb"],"sources":["/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/calculatePosition.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useCloseOnScroll.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useOverlayPosition.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useOverlay.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useOverlayTrigger.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/usePreventScroll.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useModal.tsx","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/ar-AE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/bg-BG.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/cs-CZ.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/da-DK.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/de-DE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/el-GR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/en-US.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/es-ES.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/et-EE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/fi-FI.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/fr-FR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/he-IL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/hr-HR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/hu-HU.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/it-IT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/ja-JP.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/ko-KR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/lt-LT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/lv-LV.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/nb-NO.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/nl-NL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/pl-PL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/pt-BR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/pt-PT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/ro-RO.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/ru-RU.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/sk-SK.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/sl-SI.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/sr-SP.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/sv-SE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/tr-TR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/uk-UA.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/zh-CN.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/zh-TW.json","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/intl/*.js","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/DismissButton.tsx","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/ariaHideOutside.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/usePopover.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/Overlay.tsx","/Users/vux/dev/react-project1/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useModalOverlay.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Axis, Placement, PlacementAxis, SizeAxis} from '@react-types/overlays';\n\ninterface Position {\n  top?: number,\n  left?: number,\n  bottom?: number,\n  right?: number\n}\n\ninterface Dimensions {\n  width: number,\n  height: number,\n  top: number,\n  left: number,\n  scroll: Position\n}\n\ninterface ParsedPlacement {\n  placement: PlacementAxis,\n  crossPlacement: PlacementAxis,\n  axis: Axis,\n  crossAxis: Axis,\n  size: SizeAxis,\n  crossSize: SizeAxis\n}\n\ninterface Offset {\n  top: number,\n  left: number,\n  width: number,\n  height: number\n}\n\ninterface PositionOpts {\n  placement: Placement,\n  targetNode: Element,\n  overlayNode: Element,\n  scrollNode: Element,\n  padding: number,\n  shouldFlip: boolean,\n  boundaryElement: Element,\n  offset: number,\n  crossOffset: number,\n  maxHeight?: number\n}\n\nexport interface PositionResult {\n  position?: Position,\n  arrowOffsetLeft?: number,\n  arrowOffsetTop?: number,\n  maxHeight?: number,\n  placement: PlacementAxis\n}\n\nconst AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\n\nconst FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\n\nconst CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\n\nconst AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\n\nconst PARSED_PLACEMENT_CACHE = {};\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction getContainerDimensions(containerNode: Element): Dimensions {\n  let width = 0, height = 0, top = 0, left = 0;\n  let scroll: Position = {};\n\n  if (containerNode.tagName === 'BODY') {\n    let documentElement = document.documentElement;\n    width = visualViewport?.width ?? documentElement.clientWidth;\n    height = visualViewport?.height ?? documentElement.clientHeight;\n\n    scroll.top = documentElement.scrollTop || containerNode.scrollTop;\n    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;\n  } else {\n    ({width, height, top, left} = getOffset(containerNode));\n    scroll.top = containerNode.scrollTop;\n    scroll.left = containerNode.scrollLeft;\n  }\n\n  return {width, height, scroll, top, left};\n}\n\nfunction getScroll(node: Element): Offset {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction getDelta(\n  axis: Axis,\n  offset: number,\n  size: number,\n  containerDimensions: Dimensions,\n  padding: number\n) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n\n  if (startEdgeOffset < 0) {\n    return -startEdgeOffset;\n  } else if (endEdgeOffset > containerHeight) {\n    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n  } else {\n    return 0;\n  }\n}\n\nfunction getMargins(node: Element): Position {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction parsePlacement(input: Placement): ParsedPlacement {\n  if (PARSED_PLACEMENT_CACHE[input]) {\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n\n  let [placement, crossPlacement] = input.split(' ');\n  let axis: Axis = AXIS[placement] || 'right';\n  let crossAxis: Axis = CROSS_AXIS[axis];\n\n  if (!AXIS[crossPlacement]) {\n    crossPlacement = 'center';\n  }\n\n  let size = AXIS_SIZE[axis];\n  let crossSize = AXIS_SIZE[crossAxis];\n  PARSED_PLACEMENT_CACHE[input] = {placement, crossPlacement, axis, crossAxis, size, crossSize};\n  return PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction computePosition(\n  childOffset: Offset,\n  boundaryDimensions: Dimensions,\n  overlaySize: Offset,\n  placementInfo: ParsedPlacement,\n  offset: number,\n  crossOffset: number,\n  containerOffsetWithBoundary: Offset,\n  isContainerPositioned: boolean\n) {\n  let {placement, crossPlacement, axis, crossAxis, size, crossSize} = placementInfo;\n  let position: Position = {};\n\n  // button position\n  position[crossAxis] = childOffset[crossAxis];\n  if (crossPlacement === 'center') {\n    //  + (button size / 2) - (overlay size / 2)\n    // at this point the overlay center should match the button center\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n  } else if (crossPlacement !== crossAxis) {\n    //  + (button size) - (overlay size)\n    // at this point the overlay bottom should match the button bottom\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]);\n  }/* else {\n    the overlay top should match the button top\n  } */\n  // add the crossOffset from props\n  position[crossAxis] += crossOffset;\n\n  // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n  let minViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2) - overlaySize[crossSize];\n  // this is button position of center, aligns top of overlay with button center\n  let maxViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2);\n\n  // clamp it into the range of the min/max positions\n  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition);\n\n  // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n  if (placement === axis) {\n    // If the container is positioned (non-static), then we use the container's actual\n    // height, as `bottom` will be relative to this height.  But if the container is static,\n    // then it can only be the `document.body`, and `bottom` will be relative to _its_\n    // container, which should be as large as boundaryDimensions.\n    const containerHeight = (isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size]);\n    position[FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n  } else {\n    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n  }\n\n  return position;\n}\n\nfunction getMaxHeight(\n  position: Position,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number\n) {\n  return position.top != null\n    // We want the distance between the top of the overlay to the bottom of the boundary\n    ? Math.max(0,\n      (boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the bottom of the boundary\n      - (containerOffsetWithBoundary.top + position.top) // this is the top of the overlay\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    )\n    // We want the distance between the top of the trigger to the top of the boundary\n    : Math.max(0,\n      (childOffset.top + containerOffsetWithBoundary.top) // this is the top of the trigger\n      - (boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the top of the boundary\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    );\n}\n\nfunction getAvailableSpace(\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number,\n  placementInfo: ParsedPlacement\n) {\n  let {placement, axis, size} = placementInfo;\n  if (placement === axis) {\n    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n}\n\nexport function calculatePositionInternal(\n  placementInput: Placement,\n  childOffset: Offset,\n  overlaySize: Offset,\n  scrollSize: Offset,\n  margins: Position,\n  padding: number,\n  flip: boolean,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  offset: number,\n  crossOffset: number,\n  isContainerPositioned: boolean,\n  userSetMaxHeight?: number\n): PositionResult {\n  let placementInfo = parsePlacement(placementInput);\n  let {size, crossAxis, crossSize, placement, crossPlacement} = placementInfo;\n  let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  let normalizedOffset = offset;\n  let space = getAvailableSpace(\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding + offset,\n    placementInfo\n  );\n\n  // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}` as Placement);\n    let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let flippedSpace = getAvailableSpace(\n      boundaryDimensions,\n      containerOffsetWithBoundary,\n      childOffset,\n      margins,\n      padding + offset,\n      flippedPlacementInfo\n    );\n\n    // If the available space for the flipped position is greater than the original available space, flip.\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let maxHeight = getMaxHeight(\n    position,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding\n  );\n\n  if (userSetMaxHeight && userSetMaxHeight < maxHeight) {\n    maxHeight = userSetMaxHeight;\n  }\n\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n\n  position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let arrowPosition: Position = {};\n  arrowPosition[crossAxis] = (childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2);\n\n  return {\n    position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\n/**\n * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n */\nexport function calculatePosition(opts: PositionOpts): PositionResult {\n  let {\n    placement,\n    targetNode,\n    overlayNode,\n    scrollNode,\n    padding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    maxHeight\n  } = opts;\n\n  let container = ((overlayNode instanceof HTMLElement && overlayNode.offsetParent) || document.body) as Element;\n  let isBodyContainer = container.tagName === 'BODY';\n  const containerPositionStyle = window.getComputedStyle(container).position;\n  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n  let childOffset: Offset = isBodyContainer ? getOffset(targetNode) : getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    let {marginTop, marginLeft} = window.getComputedStyle(targetNode);\n    childOffset.top += parseInt(marginTop, 10) || 0;\n    childOffset.left += parseInt(marginLeft, 10) || 0;\n  }\n\n  let overlaySize: Offset = getOffset(overlayNode);\n  let margins = getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n\n  let scrollSize = getScroll(scrollNode);\n  let boundaryDimensions = getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary: Offset = boundaryElement.tagName === 'BODY' ? getOffset(container) : getPosition(container, boundaryElement);\n\n  return calculatePositionInternal(\n    placement,\n    childOffset,\n    overlaySize,\n    scrollSize,\n    margins,\n    padding,\n    shouldFlip,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    offset,\n    crossOffset,\n    isContainerPositioned,\n    maxHeight\n  );\n}\n\nfunction getOffset(node: Element): Offset {\n  let {top, left, width, height} = node.getBoundingClientRect();\n  let {scrollTop, scrollLeft, clientTop, clientLeft} = document.documentElement;\n  return {\n    top: top + scrollTop - clientTop,\n    left: left + scrollLeft - clientLeft,\n    width,\n    height\n  };\n}\n\nfunction getPosition(node: Element, parent: Element): Offset {\n  let style = window.getComputedStyle(node);\n  let offset: Offset;\n  if (style.position === 'fixed') {\n    let {top, left, width, height} = node.getBoundingClientRect();\n    offset = {top, left, width, height};\n  } else {\n    offset = getOffset(node);\n    let parentOffset = getOffset(parent);\n    let parentStyle = window.getComputedStyle(parent);\n    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;\n    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;\n    offset.top -= parentOffset.top;\n    offset.left -= parentOffset.left;\n  }\n\n  offset.top -= parseInt(style.marginTop, 10) || 0;\n  offset.left -= parseInt(style.marginLeft, 10) || 0;\n  return offset;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useEffect} from 'react';\n\n// This behavior moved from useOverlayTrigger to useOverlayPosition.\n// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,\n// it sets a close function here mapped from the trigger element. This way we can avoid\n// forcing users to pass an onClose function to useOverlayPosition which could be considered\n// a breaking change.\nexport const onCloseMap: WeakMap<Element, () => void> = new WeakMap();\n\ninterface CloseOnScrollOptions {\n  triggerRef: RefObject<Element>,\n  isOpen?: boolean,\n  onClose?: () => void\n}\n\n/** @private */\nexport function useCloseOnScroll(opts: CloseOnScrollOptions) {\n  let {triggerRef, isOpen, onClose} = opts;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    let onScroll = (e: MouseEvent) => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target;\n      // window is not a Node and doesn't have contain, but window contains everything\n      if (!triggerRef.current || ((target instanceof Node) && !target.contains(triggerRef.current))) {\n        return;\n      }\n\n      let onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {calculatePosition, PositionResult} from './calculatePosition';\nimport {DOMAttributes} from '@react-types/shared';\nimport {Placement, PlacementAxis, PositionProps} from '@react-types/overlays';\nimport {RefObject, useCallback, useRef, useState} from 'react';\nimport {useCloseOnScroll} from './useCloseOnScroll';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface AriaPositionProps extends PositionProps {\n  /**\n   * Element that that serves as the positioning boundary.\n   * @default document.body\n   */\n  boundaryElement?: Element,\n  /**\n   * The ref for the element which the overlay positions itself with respect to.\n   */\n  targetRef: RefObject<Element>,\n  /**\n   * The ref for the overlay element.\n   */\n  overlayRef: RefObject<Element>,\n  /**\n   * A ref for the scrollable region within the overlay.\n   * @default overlayRef\n   */\n  scrollRef?: RefObject<Element>,\n  /**\n   * Whether the overlay should update its position automatically.\n   * @default true\n   */\n  shouldUpdatePosition?: boolean,\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void,\n  /**\n   * The maxHeight specified for the overlay element.\n   * By default, it will take all space up to the current viewport height.\n   */\n  maxHeight?: number\n}\n\nexport interface PositionAria {\n  /** Props for the overlay container element. */\n  overlayProps: DOMAttributes,\n  /** Props for the overlay tip arrow if any. */\n  arrowProps: DOMAttributes,\n  /** Placement of the overlay with respect to the overlay trigger. */\n  placement: PlacementAxis,\n  /** Updates the position of the overlay. */\n  updatePosition(): void\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n/**\n * Handles positioning overlays like popovers and menus relative to a trigger\n * element, and updating the position when the window resizes.\n */\nexport function useOverlayPosition(props: AriaPositionProps): PositionAria {\n  let {direction} = useLocale();\n  let {\n    targetRef,\n    overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom' as Placement,\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    onClose,\n    maxHeight\n  } = props;\n  let [position, setPosition] = useState<PositionResult>({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined\n  });\n\n  let deps = [\n    shouldUpdatePosition,\n    placement,\n    overlayRef.current,\n    targetRef.current,\n    scrollRef.current,\n    containerPadding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    isOpen,\n    direction,\n    maxHeight\n  ];\n\n  let updatePosition = useCallback(() => {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) {\n      return;\n    }\n\n    setPosition(\n      calculatePosition({\n        placement: translateRTL(placement, direction),\n        overlayNode: overlayRef.current,\n        targetNode: targetRef.current,\n        scrollNode: scrollRef.current,\n        padding: containerPadding,\n        shouldFlip,\n        boundaryElement,\n        offset,\n        crossOffset,\n        maxHeight\n      })\n    );\n  }, deps);\n\n  // Update position when anything changes\n  useLayoutEffect(updatePosition, deps);\n\n  // Update position on window resize\n  useResize(updatePosition);\n\n  // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n  let isResizing = useRef(false);\n  useLayoutEffect(() => {\n    let timeout: ReturnType<typeof setTimeout>;\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n\n      updatePosition();\n    };\n\n    visualViewport?.addEventListener('resize', onResize);\n\n    return () => {\n      visualViewport?.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n\n  let close = useCallback(() => {\n    if (!isResizing.current) {\n      onClose();\n    }\n  }, [onClose, isResizing]);\n\n  // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n  useCloseOnScroll({\n    triggerRef: targetRef,\n    isOpen,\n    onClose: onClose ? close : undefined\n  });\n\n  return {\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000, // should match the z-index in ModalTrigger\n        ...position.position,\n        maxHeight: position.maxHeight\n      }\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    updatePosition\n  };\n}\n\nfunction useResize(onResize) {\n  useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {RefObject, SyntheticEvent, useEffect} from 'react';\nimport {useFocusWithin, useInteractOutside} from '@react-aria/interactions';\n\nexport interface AriaOverlayProps {\n  /** Whether the overlay is currently open. */\n  isOpen?: boolean,\n\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void,\n\n  /**\n   * Whether to close the overlay when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean,\n\n  /** Whether the overlay should close when focus is lost or moves outside it. */\n  shouldCloseOnBlur?: boolean,\n\n  /**\n   * Whether pressing the escape key to close the overlay should be disabled.\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n\n  /**\n   * When user interacts with the argument element outside of the overlay ref,\n   * return true if onClose should be called.  This gives you a chance to filter\n   * out interaction with elements that should not dismiss the overlay.\n   * By default, onClose will always be called on interaction outside the overlay ref.\n   */\n  shouldCloseOnInteractOutside?: (element: Element) => boolean\n}\n\nexport interface OverlayAria {\n  /** Props to apply to the overlay container element. */\n  overlayProps: DOMAttributes,\n  /** Props to apply to the underlay element, if any. */\n  underlayProps: DOMAttributes\n}\n\nconst visibleOverlays: RefObject<Element>[] = [];\n\n/**\n * Provides the behavior for overlays such as dialogs, popovers, and menus.\n * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n * or optionally, on blur. Only the top-most overlay will close at once.\n */\nexport function useOverlay(props: AriaOverlayProps, ref: RefObject<Element>): OverlayAria {\n  let {\n    onClose,\n    shouldCloseOnBlur,\n    isOpen,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside\n  } = props;\n\n  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n  useEffect(() => {\n    if (isOpen) {\n      visibleOverlays.push(ref);\n    }\n\n    return () => {\n      let index = visibleOverlays.indexOf(ref);\n      if (index >= 0) {\n        visibleOverlays.splice(index, 1);\n      }\n    };\n  }, [isOpen, ref]);\n\n  // Only hide the overlay when it is the topmost visible overlay in the stack.\n  let onHide = () => {\n    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n      onClose();\n    }\n  };\n\n  let onInteractOutsideStart = (e: SyntheticEvent<Element>) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n\n  let onInteractOutside = (e: SyntheticEvent<Element>) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      onHide();\n    }\n  };\n\n  // Handle the escape key\n  let onKeyDown = (e) => {\n    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  };\n\n  // Handle clicking outside the overlay to close it\n  useInteractOutside({ref, onInteractOutside: isDismissable ? onInteractOutside : null, onInteractOutsideStart});\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: (e) => {\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget as Element)) {\n        onClose();\n      }\n    }\n  });\n\n  let onPointerDownUnderlay = e => {\n    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n    if (e.target === e.currentTarget) {\n      e.preventDefault();\n    }\n  };\n\n  return {\n    overlayProps: {\n      onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {DOMAttributes} from '@react-types/shared';\nimport {onCloseMap} from './useCloseOnScroll';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface OverlayTriggerProps {\n  /** Type of overlay that is opened by the trigger. */\n  type: 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid'\n}\n\nexport interface OverlayTriggerAria {\n  /** Props for the trigger element. */\n  triggerProps: AriaButtonProps,\n\n  /** Props for the overlay container element. */\n  overlayProps: DOMAttributes\n}\n\n/**\n * Handles the behavior and accessibility for an overlay trigger, e.g. a button\n * that opens a popover, menu, or other overlay that is positioned relative to the trigger.\n */\nexport function useOverlayTrigger(props: OverlayTriggerProps, state: OverlayTriggerState, ref: RefObject<Element>): OverlayTriggerAria {\n  let {type} = props;\n  let {isOpen} = state;\n\n  // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll\n  // without forcing users to pass onClose.\n  useEffect(() => {\n    if (ref && ref.current) {\n      onCloseMap.set(ref.current, state.close);\n    }\n  });\n\n  // Aria 1.1 supports multiple values for aria-haspopup other than just menus.\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\n  // However, we only add it for menus for now because screen readers often\n  // announce it as a menu even for other values.\n  let ariaHasPopup = undefined;\n  if (type === 'menu') {\n    ariaHasPopup = true;\n  } else if (type === 'listbox') {\n    ariaHasPopup = 'listbox';\n  }\n\n  let overlayId = useId();\n  return {\n    triggerProps: {\n      'aria-haspopup': ariaHasPopup,\n      'aria-expanded': isOpen,\n      'aria-controls': isOpen ? overlayId : null,\n      onPress: state.toggle\n    },\n    overlayProps: {\n      id: overlayId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, getScrollParent, isIOS, useLayoutEffect} from '@react-aria/utils';\n\ninterface PreventScrollOptions {\n  /** Whether the scroll lock is disabled. */\n  isDisabled?: boolean\n}\n\n// @ts-ignore\nconst visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n// HTML input types that do not cause the software keyboard to appear.\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * Prevents scrolling on the document body on mount, and\n * restores it on unmount. Also ensures that content does not\n * shift due to the scrollbars disappearing.\n */\nexport function usePreventScroll(options: PreventScrollOptions = {}) {\n  let {isDisabled} = options;\n\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (isIOS()) {\n      return preventScrollMobileSafari();\n    } else {\n      return preventScrollStandard();\n    }\n  }, [isDisabled]);\n}\n\n// For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\nfunction preventScrollStandard() {\n  return chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    setStyle(document.documentElement, 'overflow', 'hidden')\n  );\n}\n\n// Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\nfunction preventScrollMobileSafari() {\n  let scrollable: Element;\n  let lastY = 0;\n  let onTouchStart = (e: TouchEvent) => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = getScrollParent(e.target as Element);\n    if (scrollable === document.documentElement && scrollable === document.body) {\n      return;\n    }\n\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = (e: TouchEvent) => {\n    // Prevent scrolling the window.\n    if (scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    }\n\n    // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n\n    if ((scrollTop <= 0 && y > lastY) || (scrollTop >= bottom && y < lastY)) {\n      e.preventDefault();\n    }\n\n    lastY = y;\n  };\n\n  let onTouchEnd = (e: TouchEvent) => {\n    let target = e.target as HTMLElement;\n\n    // Apply this change if we're not already focused on the target element\n    if (willOpenKeyboard(target) && target !== document.activeElement) {\n      e.preventDefault();\n\n      // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    let target = e.target as HTMLElement;\n    if (willOpenKeyboard(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n\n        // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n        if (visualViewport) {\n          if (visualViewport.height < window.innerHeight) {\n            // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              scrollIntoView(target);\n            });\n          } else {\n            // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            visualViewport.addEventListener('resize', () => scrollIntoView(target), {once: true});\n          }\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  };\n\n  // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n  let restoreStyles = chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    setStyle(document.documentElement, 'overflow', 'hidden'),\n    setStyle(document.body, 'marginTop', `-${scrollY}px`)\n  );\n\n  // Scroll to the top. The negative margin on the body will make this appear the same.\n  window.scrollTo(0, 0);\n\n  let removeEvents = chain(\n    addEvent(document, 'touchstart', onTouchStart, {passive: false, capture: true}),\n    addEvent(document, 'touchmove', onTouchMove, {passive: false, capture: true}),\n    addEvent(document, 'touchend', onTouchEnd, {passive: false, capture: true}),\n    addEvent(document, 'focus', onFocus, true),\n    addEvent(window, 'scroll', onWindowScroll)\n  );\n\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n}\n\n// Sets a CSS property on an element, and returns a function to revert it to the previous value.\nfunction setStyle(element: HTMLElement, style: string, value: string) {\n  let cur = element.style[style];\n  element.style[style] = value;\n  return () => {\n    element.style[style] = cur;\n  };\n}\n\n// Adds an event listener to an element, and returns a function to remove it.\nfunction addEvent<K extends keyof GlobalEventHandlersEventMap>(\n  target: EventTarget,\n  event: K,\n  handler: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  target.addEventListener(event, handler, options);\n  return () => {\n    target.removeEventListener(event, handler, options);\n  };\n}\n\nfunction scrollIntoView(target: Element) {\n  let root = document.scrollingElement || document.documentElement;\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = getScrollParent(target);\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      if (targetTop > scrollableTop + target.clientHeight) {\n        scrollable.scrollTop += targetTop - scrollableTop;\n      }\n    }\n\n    target = scrollable.parentElement;\n  }\n}\n\nfunction willOpenKeyboard(target: Element) {\n  return (\n    (target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type)) ||\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLElement && target.isContentEditable)\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport React, {AriaAttributes, ReactNode, useContext, useEffect, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface ModalProviderProps extends DOMAttributes {\n  children: ReactNode\n}\n\ninterface ModalContext {\n  parent: ModalContext | null,\n  modalCount: number,\n  addModal: () => void,\n  removeModal: () => void\n}\n\nconst Context = React.createContext<ModalContext | null>(null);\n\n/**\n * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals\n * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.\n * This is done recursively so that all parent providers are incremented and decremented.\n * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its\n * subtree from screen readers. This is done using React context in order to account for things\n * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.\n */\nexport function ModalProvider(props: ModalProviderProps) {\n  let {children} = props;\n  let parent = useContext(Context);\n  let [modalCount, setModalCount] = useState(0);\n  let context = useMemo(() => ({\n    parent,\n    modalCount,\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) {\n        parent.addModal();\n      }\n    },\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) {\n        parent.removeModal();\n      }\n    }\n  }), [parent, modalCount]);\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport interface ModalProviderAria {\n  /**\n   * Props to be spread on the container element.\n   */\n  modalProviderProps: AriaAttributes\n}\n\n/**\n * Used to determine if the tree should be aria-hidden based on how many\n * modals are open.\n */\nexport function useModalProvider(): ModalProviderAria {\n  let context = useContext(Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : null\n    }\n  };\n}\n\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\nfunction OverlayContainerDOM(props: ModalProviderProps) {\n  let {modalProviderProps} = useModalProvider();\n  return <div data-overlay-container {...props} {...modalProviderProps} />;\n}\n\n/**\n * An OverlayProvider acts as a container for the top-level application.\n * Any application that uses modal dialogs or other overlays should\n * be wrapped in a `<OverlayProvider>`. This is used to ensure that\n * the main content of the application is hidden from screen readers\n * if a modal or other overlay is opened. Only the top-most modal or\n * overlay should be accessible at once.\n */\nexport function OverlayProvider(props: ModalProviderProps) {\n  return (\n    <ModalProvider>\n      <OverlayContainerDOM {...props} />\n    </ModalProvider>\n  );\n}\n\nexport interface OverlayContainerProps extends ModalProviderProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element\n}\n\n/**\n * A container for overlays like modals and popovers. Renders the overlay\n * into a Portal which is placed at the end of the document body.\n * Also ensures that the overlay is hidden from screen readers if a\n * nested modal is opened. Only the top-most modal or overlay should\n * be accessible at once.\n */\nexport function OverlayContainer(props: OverlayContainerProps): React.ReactPortal {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body, ...rest} = props;\n\n  React.useEffect(() => {\n    if (portalContainer?.closest('[data-overlay-container]')) {\n      throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n    }\n  }, [portalContainer]);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = <OverlayProvider {...rest} />;\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\ninterface ModalAriaProps extends DOMAttributes {\n  /** Data attribute marks the dom node as a modal for the aria-modal-polyfill. */\n  'data-ismodal': boolean\n}\n\nexport interface AriaModalOptions {\n  isDisabled?: boolean\n}\n\nexport interface ModalAria {\n  /** Props for the modal content element. */\n  modalProps: ModalAriaProps\n}\n\n/**\n * Hides content outside the current `<OverlayContainer>` from screen readers\n * on mount and restores it on unmount. Typically used by modal dialogs and\n * other types of overlays to ensure that only the top-most modal is\n * accessible at once.\n */\nexport function useModal(options?: AriaModalOptions): ModalAria {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = useContext(Context);\n  if (!context) {\n    throw new Error('Modal is not contained within a provider');\n  }\n\n  useEffect(() => {\n    if (options?.isDisabled || !context || !context.parent) {\n      return;\n    }\n\n    // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) {\n        context.parent.removeModal();\n      }\n    };\n  }, [context, context.parent, options?.isDisabled]);\n\n  return {\n    modalProps: {\n      'data-ismodal': !options?.isDisabled\n    }\n  };\n}\n","{\n  \"dismiss\": \"تجاهل\"\n}\n","{\n  \"dismiss\": \"Отхвърляне\"\n}\n","{\n  \"dismiss\": \"Odstranit\"\n}\n","{\n  \"dismiss\": \"Luk\"\n}\n","{\n  \"dismiss\": \"Schließen\"\n}\n","{\n  \"dismiss\": \"Απόρριψη\"\n}\n","{\n  \"dismiss\": \"Dismiss\"\n}\n","{\n  \"dismiss\": \"Descartar\"\n}\n","{\n  \"dismiss\": \"Lõpeta\"\n}\n","{\n  \"dismiss\": \"Hylkää\"\n}\n","{\n  \"dismiss\": \"Rejeter\"\n}\n","{\n  \"dismiss\": \"התעלם\"\n}\n","{\n  \"dismiss\": \"Odbaci\"\n}\n","{\n  \"dismiss\": \"Elutasítás\"\n}\n","{\n  \"dismiss\": \"Ignora\"\n}\n","{\n  \"dismiss\": \"閉じる\"\n}\n","{\n  \"dismiss\": \"무시\"\n}\n","{\n  \"dismiss\": \"Atmesti\"\n}\n","{\n  \"dismiss\": \"Nerādīt\"\n}\n","{\n  \"dismiss\": \"Lukk\"\n}\n","{\n  \"dismiss\": \"Negeren\"\n}\n","{\n  \"dismiss\": \"Zignoruj\"\n}\n","{\n  \"dismiss\": \"Descartar\"\n}\n","{\n  \"dismiss\": \"Dispensar\"\n}\n","{\n  \"dismiss\": \"Revocare\"\n}\n","{\n  \"dismiss\": \"Пропустить\"\n}\n","{\n  \"dismiss\": \"Zrušiť\"\n}\n","{\n  \"dismiss\": \"Opusti\"\n}\n","{\n  \"dismiss\": \"Odbaci\"\n}\n","{\n  \"dismiss\": \"Avvisa\"\n}\n","{\n  \"dismiss\": \"Kapat\"\n}\n","{\n  \"dismiss\": \"Скасувати\"\n}\n","{\n  \"dismiss\": \"取消\"\n}\n","{\n  \"dismiss\": \"關閉\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React from 'react';\nimport {useLabels} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\nexport interface DismissButtonProps extends AriaLabelingProps, DOMProps {\n  /** Called when the dismiss button is activated. */\n  onDismiss?: () => void\n}\n\n/**\n * A visually hidden button that can be used to allow screen reader\n * users to dismiss a modal or popup when there is no visual\n * affordance to do so.\n */\nexport function DismissButton(props: DismissButtonProps) {\n  let {onDismiss, ...otherProps} = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  let labels = useLabels(otherProps, stringFormatter.format('dismiss'));\n\n  let onClick = () => {\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n\n  return (\n    <VisuallyHidden>\n      <button\n        {...labels}\n        tabIndex={-1}\n        onClick={onClick} />\n    </VisuallyHidden>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Keeps a ref count of all hidden elements. Added to when hiding an element, and\n// subtracted from when showing it again. When it reaches zero, aria-hidden is removed.\nlet refCountMap = new WeakMap<Element, number>();\n\n/**\n * Hides all elements in the DOM outside the given targets from screen readers using aria-hidden,\n * and returns a function to revert these changes. In addition, changes to the DOM are watched\n * and new elements outside the targets are automatically hidden.\n * @param targets - The elements that should remain visible.\n * @param root - Nothing will be hidden above this element.\n * @returns - A function to restore all hidden elements.\n */\nexport function ariaHideOutside(targets: Element[], root = document.body) {\n  let visibleNodes = new Set<Element>(targets);\n  let hiddenNodes = new Set<Element>();\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // If this node is a live announcer, add it to the set of nodes to keep visible.\n        if (((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true')) {\n          visibleNodes.add(node);\n        }\n\n        // Skip this node and its children if it is one of the target nodes, or a live announcer.\n        // Also skip children of already hidden nodes, as aria-hidden is recursive. An exception is\n        // made for elements with role=\"row\" since VoiceOver on iOS has issues hiding elements with role=\"row\".\n        // For that case we want to hide the cells inside as well (https://bugs.webkit.org/show_bug.cgi?id=222623).\n        if (\n          visibleNodes.has(node as Element) ||\n          (hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute('role') !== 'row')\n        ) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        // Skip this node but continue to children if one of the targets is inside the node.\n        if (targets.some(target => node.contains(target))) {\n          return NodeFilter.FILTER_SKIP;\n        }\n\n        return NodeFilter.FILTER_ACCEPT;\n      }\n    }\n  );\n\n  let hide = (node: Element) => {\n    let refCount = refCountMap.get(node) ?? 0;\n\n    // If already aria-hidden, and the ref count is zero, then this element\n    // was already hidden and there's nothing for us to do.\n    if (node.getAttribute('aria-hidden') === 'true' && refCount === 0) {\n      return;\n    }\n\n    if (refCount === 0) {\n      node.setAttribute('aria-hidden', 'true');\n    }\n\n    hiddenNodes.add(node);\n    refCountMap.set(node, refCount + 1);\n  };\n\n  let node = walker.nextNode() as Element;\n  while (node != null) {\n    hide(node);\n    node = walker.nextNode() as Element;\n  }\n\n  let observer = new MutationObserver(changes => {\n    for (let change of changes) {\n      if (change.type !== 'childList' || change.addedNodes.length === 0) {\n        continue;\n      }\n\n      // If the parent element of the added nodes is not within one of the targets,\n      // and not already inside a hidden node, hide all of the new children.\n      if (![...visibleNodes, ...hiddenNodes].some(node => node.contains(change.target))) {\n        for (let node of change.addedNodes) {\n          if (((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true')) {\n            visibleNodes.add(node);\n          } else if (node instanceof Element) {\n            hide(node);\n          }\n        }\n      }\n    }\n  });\n\n  observer.observe(root, {childList: true, subtree: true});\n\n  return () => {\n    observer.disconnect();\n\n    for (let node of hiddenNodes) {\n      let count = refCountMap.get(node);\n      if (count === 1) {\n        node.removeAttribute('aria-hidden');\n        refCountMap.delete(node);\n      } else {\n        refCountMap.set(node, count - 1);\n      }\n    }\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside} from './ariaHideOutside';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {PositionProps} from '@react-types/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {useOverlayPosition} from './useOverlayPosition';\n\nexport interface AriaPopoverProps extends Omit<PositionProps, 'isOpen'> {\n  /**\n   * The ref for the element which the popover positions itself with respect to.\n   */\n  triggerRef: RefObject<Element>,\n  /**\n   * The ref for the popover element.\n   */\n  popoverRef: RefObject<Element>,\n  /**\n   * Whether the popover is non-modal, i.e. elements outside the popover may be\n   * interacted with by assistive technologies.\n   *\n   * Most popovers should not use this option as it may negatively impact the screen\n   * reader experience. Only use with components such as combobox, which are designed\n   * to handle this situation carefully.\n   */\n  isNonModal?: boolean\n}\n\nexport interface PopoverAria {\n  /** Props for the popover element. */\n  popoverProps: DOMAttributes,\n  /** Props for the popover tip arrow if any. */\n  arrowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nexport function usePopover(props: AriaPopoverProps, state: OverlayTriggerState): PopoverAria {\n  let {\n    triggerRef,\n    popoverRef,\n    isNonModal,\n    ...otherProps\n  } = props;\n\n  let {overlayProps} = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: true\n    },\n    popoverRef\n  );\n\n  let {overlayProps: positionProps, arrowProps} = useOverlayPosition({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen\n  });\n\n  useEffect(() => {\n    if (state.isOpen && !isNonModal) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusScope} from '@react-aria/focus';\nimport React, {ReactNode, useContext, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport interface OverlayProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element,\n  /** The overlay to render in the portal. */\n  children: ReactNode\n}\n\nconst OverlayContext = React.createContext(null);\n\n/**\n * A container which renders an overlay such as a popover or modal in a portal,\n * and provides a focus scope for the child elements.\n */\nexport function Overlay(props: OverlayProps) {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body} = props;\n  let [contain, setContain] = useState(false);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = (\n    <OverlayContext.Provider value={setContain}>\n      <FocusScope restoreFocus contain={contain}>\n        {props.children}\n      </FocusScope>\n    </OverlayContext.Provider>\n  );\n\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\n/** @private */\nexport function useOverlayFocusContain() {\n  let setContain = useContext(OverlayContext);\n  useLayoutEffect(() => {\n    setContain?.(true);\n  }, [setContain]);\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside} from './ariaHideOutside';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {useOverlayFocusContain} from './Overlay';\nimport {usePreventScroll} from './usePreventScroll';\n\nexport interface AriaModalOverlayProps {\n  /**\n   * Whether to close the modal when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean,\n  /**\n   * Whether pressing the escape key to close the modal should be disabled.\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean\n}\n\nexport interface ModalOverlayAria {\n  /** Props for the modal element. */\n  modalProps: DOMAttributes,\n  /** Props for the underlay element. */\n  underlayProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a modal component.\n * A modal is an overlay element which blocks interaction with elements outside it.\n */\nexport function useModalOverlay(props: AriaModalOverlayProps, state: OverlayTriggerState, ref: RefObject<HTMLElement>): ModalOverlayAria {\n  let {overlayProps, underlayProps} = useOverlay({\n    ...props,\n    isOpen: state.isOpen,\n    onClose: state.close\n  }, ref);\n\n  usePreventScroll({\n    isDisabled: !state.isOpen\n  });\n\n  useOverlayFocusContain();\n\n  useEffect(() => {\n    if (state.isOpen) {\n      return ariaHideOutside([ref.current]);\n    }\n  }, [state.isOpen, ref]);\n\n  return {\n    modalProps: mergeProps(overlayProps),\n    underlayProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}