{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid, focusWithoutScrolling as $lJcFS$focusWithoutScrolling } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo, useRef as $lJcFS$useRef, useCallback as $lJcFS$useCallback } from \"react\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useLocalizedStringFormatter as $lJcFS$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useFocusable as $lJcFS$useFocusable, focusSafely as $lJcFS$focusSafely } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress, useKeyboard as $lJcFS$useKeyboard, useMove as $lJcFS$useMove } from \"@react-aria/interactions\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\n\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\n\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(' ');\n}\n\nvar $ae7e9c471762b4d3$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = {\n  \"ascending\": `تصاعدي`,\n  \"ascendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,\n  \"columnSize\": args => `${args.value} بالبكسل`,\n  \"descending\": `تنازلي`,\n  \"descendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,\n  \"select\": `تحديد`,\n  \"selectAll\": `تحديد الكل`,\n  \"sortable\": `عمود قابل للترتيب`\n};\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = {\n  \"ascending\": `възходящ`,\n  \"ascendingSort\": args => `сортирано по колона ${args.columnName} във възходящ ред`,\n  \"columnSize\": args => `${args.value} пиксела`,\n  \"descending\": `низходящ`,\n  \"descendingSort\": args => `сортирано по колона ${args.columnName} в низходящ ред`,\n  \"select\": `Изберете`,\n  \"selectAll\": `Изберете всичко`,\n  \"sortable\": `сортираща колона`\n};\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = {\n  \"ascending\": `vzestupně`,\n  \"ascendingSort\": args => `řazeno vzestupně podle sloupce ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixelů`,\n  \"descending\": `sestupně`,\n  \"descendingSort\": args => `řazeno sestupně podle sloupce ${args.columnName}`,\n  \"select\": `Vybrat`,\n  \"selectAll\": `Vybrat vše`,\n  \"sortable\": `sloupec s možností řazení`\n};\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `faldende`,\n  \"descendingSort\": args => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,\n  \"select\": `Vælg`,\n  \"selectAll\": `Vælg alle`,\n  \"sortable\": `sorterbar kolonne`\n};\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = {\n  \"ascending\": `aufsteigend`,\n  \"ascendingSort\": args => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,\n  \"columnSize\": args => `${args.value} Pixel`,\n  \"descending\": `absteigend`,\n  \"descendingSort\": args => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,\n  \"select\": `Auswählen`,\n  \"selectAll\": `Alles auswählen`,\n  \"sortable\": `sortierbare Spalte`\n};\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = {\n  \"ascending\": `αύξουσα`,\n  \"ascendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `φθίνουσα`,\n  \"descendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,\n  \"select\": `Επιλογή`,\n  \"selectAll\": `Επιλογή όλων`,\n  \"sortable\": `Στήλη διαλογής`\n};\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = {\n  \"select\": `Select`,\n  \"selectAll\": `Select All`,\n  \"sortable\": `sortable column`,\n  \"ascending\": `ascending`,\n  \"descending\": `descending`,\n  \"ascendingSort\": args => `sorted by column ${args.columnName} in ascending order`,\n  \"descendingSort\": args => `sorted by column ${args.columnName} in descending order`,\n  \"columnSize\": args => `${args.value} pixels`\n};\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = {\n  \"ascending\": `de subida`,\n  \"ascendingSort\": args => `ordenado por columna ${args.columnName} en orden de subida`,\n  \"columnSize\": args => `${args.value} píxeles`,\n  \"descending\": `de bajada`,\n  \"descendingSort\": args => `ordenado por columna ${args.columnName} en orden de bajada`,\n  \"select\": `Seleccionar`,\n  \"selectAll\": `Seleccionar todos`,\n  \"sortable\": `columna ordenable`\n};\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = {\n  \"ascending\": `tõusev järjestus`,\n  \"ascendingSort\": args => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,\n  \"columnSize\": args => `${args.value} pikslit`,\n  \"descending\": `laskuv järjestus`,\n  \"descendingSort\": args => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,\n  \"select\": `Vali`,\n  \"selectAll\": `Vali kõik`,\n  \"sortable\": `sorditav veerg`\n};\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = {\n  \"ascending\": `nouseva`,\n  \"ascendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,\n  \"columnSize\": args => `${args.value} pikseliä`,\n  \"descending\": `laskeva`,\n  \"descendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,\n  \"select\": `Valitse`,\n  \"selectAll\": `Valitse kaikki`,\n  \"sortable\": `lajiteltava sarake`\n};\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = {\n  \"ascending\": `croissant`,\n  \"ascendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `décroissant`,\n  \"descendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,\n  \"select\": `Sélectionner`,\n  \"selectAll\": `Sélectionner tout`,\n  \"sortable\": `colonne triable`\n};\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = {\n  \"ascending\": `עולה`,\n  \"ascendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר עולה`,\n  \"columnSize\": args => `${args.value} פיקסלים`,\n  \"descending\": `יורד`,\n  \"descendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר יורד`,\n  \"select\": `בחר`,\n  \"selectAll\": `בחר הכול`,\n  \"sortable\": `עמודה שניתן למיין`\n};\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,\n  \"columnSize\": args => `${args.value} piksela`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,\n  \"select\": `Odaberite`,\n  \"selectAll\": `Odaberite sve`,\n  \"sortable\": `stupac koji se može razvrstati`\n};\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = {\n  \"ascending\": `növekvő`,\n  \"ascendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,\n  \"columnSize\": args => `${args.value} képpont`,\n  \"descending\": `csökkenő`,\n  \"descendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,\n  \"select\": `Kijelölés`,\n  \"selectAll\": `Összes kijelölése`,\n  \"sortable\": `rendezendő oszlop`\n};\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `in ordine crescente in base alla colonna ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `in ordine decrescente in base alla colonna ${args.columnName}`,\n  \"select\": `Seleziona`,\n  \"selectAll\": `Seleziona tutto`,\n  \"sortable\": `colonna ordinabile`\n};\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = {\n  \"ascending\": `昇順`,\n  \"ascendingSort\": args => `列 ${args.columnName} を昇順で並べ替え`,\n  \"columnSize\": args => `${args.value} ピクセル`,\n  \"descending\": `降順`,\n  \"descendingSort\": args => `列 ${args.columnName} を降順で並べ替え`,\n  \"select\": `選択`,\n  \"selectAll\": `すべて選択`,\n  \"sortable\": `並べ替え可能な列`\n};\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = {\n  \"ascending\": `오름차순`,\n  \"ascendingSort\": args => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,\n  \"columnSize\": args => `${args.value} 픽셀`,\n  \"descending\": `내림차순`,\n  \"descendingSort\": args => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,\n  \"select\": `선택`,\n  \"selectAll\": `모두 선택`,\n  \"sortable\": `정렬 가능한 열`\n};\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = {\n  \"ascending\": `didėjančia tvarka`,\n  \"ascendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,\n  \"columnSize\": args => `${args.value} piks.`,\n  \"descending\": `mažėjančia tvarka`,\n  \"descendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,\n  \"select\": `Pasirinkti`,\n  \"selectAll\": `Pasirinkti viską`,\n  \"sortable\": `rikiuojamas stulpelis`\n};\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = {\n  \"ascending\": `augošā secībā`,\n  \"ascendingSort\": args => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,\n  \"columnSize\": args => `${args.value} pikseļi`,\n  \"descending\": `dilstošā secībā`,\n  \"descendingSort\": args => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,\n  \"select\": `Atlasīt`,\n  \"selectAll\": `Atlasīt visu`,\n  \"sortable\": `kārtojamā kolonna`\n};\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,\n  \"columnSize\": args => `${args.value} piksler`,\n  \"descending\": `synkende`,\n  \"descendingSort\": args => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,\n  \"select\": `Velg`,\n  \"selectAll\": `Velg alle`,\n  \"sortable\": `kolonne som kan sorteres`\n};\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = {\n  \"ascending\": `oplopend`,\n  \"ascendingSort\": args => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `aflopend`,\n  \"descendingSort\": args => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,\n  \"select\": `Selecteren`,\n  \"selectAll\": `Alles selecteren`,\n  \"sortable\": `sorteerbare kolom`\n};\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = {\n  \"ascending\": `rosnąco`,\n  \"ascendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,\n  \"columnSize\": args => `Liczba pikseli: ${args.value}`,\n  \"descending\": `malejąco`,\n  \"descendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku malejącym`,\n  \"select\": `Zaznacz`,\n  \"selectAll\": `Zaznacz wszystko`,\n  \"sortable\": `kolumna z możliwością sortowania`\n};\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `classificado pela coluna ${args.columnName} em ordem crescente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `classificado pela coluna ${args.columnName} em ordem decrescente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `coluna classificável`\n};\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = {\n  \"ascending\": `ascendente`,\n  \"ascendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem ascendente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `descendente`,\n  \"descendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem descendente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `Coluna ordenável`\n};\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = {\n  \"ascending\": `crescătoare`,\n  \"ascendingSort\": args => `sortate după coloana ${args.columnName} în ordine crescătoare`,\n  \"columnSize\": args => `${args.value} pixeli`,\n  \"descending\": `descrescătoare`,\n  \"descendingSort\": args => `sortate după coloana ${args.columnName} în ordine descrescătoare`,\n  \"select\": `Selectare`,\n  \"selectAll\": `Selectare totală`,\n  \"sortable\": `coloană sortabilă`\n};\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = {\n  \"ascending\": `возрастание`,\n  \"ascendingSort\": args => `сортировать столбец ${args.columnName} в порядке возрастания`,\n  \"columnSize\": args => `${args.value} пикс.`,\n  \"descending\": `убывание`,\n  \"descendingSort\": args => `сортировать столбец ${args.columnName} в порядке убывания`,\n  \"select\": `Выбрать`,\n  \"selectAll\": `Выбрать все`,\n  \"sortable\": `сортируемый столбец`\n};\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = {\n  \"ascending\": `vzostupne`,\n  \"ascendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"columnSize\": args => `Počet pixelov: ${args.value}`,\n  \"descending\": `zostupne`,\n  \"descendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"select\": `Vybrať`,\n  \"selectAll\": `Vybrať všetko`,\n  \"sortable\": `zoraditeľný stĺpec`\n};\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = {\n  \"ascending\": `naraščajoče`,\n  \"ascendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,\n  \"columnSize\": args => `${args.value} slikovnih pik`,\n  \"descending\": `padajoče`,\n  \"descendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,\n  \"select\": `Izberite`,\n  \"selectAll\": `Izberite vse`,\n  \"sortable\": `razvrstljivi stolpec`\n};\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `sortirano po kolonama ${args.columnName} rastućim redosledom`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `sortirano po kolonama ${args.columnName} padajućim redosledom`,\n  \"select\": `Izaberite`,\n  \"selectAll\": `Izaberite sve`,\n  \"sortable\": `kolona koja se može sortirati`\n};\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = {\n  \"ascending\": `stigande`,\n  \"ascendingSort\": args => `sorterat på kolumn ${args.columnName} i stigande ordning`,\n  \"columnSize\": args => `${args.value} pixlar`,\n  \"descending\": `fallande`,\n  \"descendingSort\": args => `sorterat på kolumn ${args.columnName} i fallande ordning`,\n  \"select\": `Markera`,\n  \"selectAll\": `Markera allt`,\n  \"sortable\": `sorterbar kolumn`\n};\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = {\n  \"ascending\": `artan sırada`,\n  \"ascendingSort\": args => `${args.columnName} sütuna göre artan düzende sırala`,\n  \"columnSize\": args => `${args.value} piksel`,\n  \"descending\": `azalan sırada`,\n  \"descendingSort\": args => `${args.columnName} sütuna göre azalan düzende sırala`,\n  \"select\": `Seç`,\n  \"selectAll\": `Tümünü Seç`,\n  \"sortable\": `Sıralanabilir sütun`\n};\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = {\n  \"ascending\": `висхідний`,\n  \"ascendingSort\": args => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,\n  \"columnSize\": args => `${args.value} пікс.`,\n  \"descending\": `низхідний`,\n  \"descendingSort\": args => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,\n  \"select\": `Вибрати`,\n  \"selectAll\": `Вибрати все`,\n  \"sortable\": `сортувальний стовпець`\n};\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = {\n  \"ascending\": `升序`,\n  \"ascendingSort\": args => `按列 ${args.columnName} 升序排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `降序`,\n  \"descendingSort\": args => `按列 ${args.columnName} 降序排序`,\n  \"select\": `选择`,\n  \"selectAll\": `全选`,\n  \"sortable\": `可排序的列`\n};\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = {\n  \"ascending\": `遞增`,\n  \"ascendingSort\": args => `已依據「${args.columnName}」欄遞增排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `遞減`,\n  \"descendingSort\": args => `已依據「${args.columnName}」欄遞減排序`,\n  \"select\": `選取`,\n  \"selectAll\": `全選`,\n  \"sortable\": `可排序的欄`\n};\n$ae7e9c471762b4d3$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\n\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $lJcFS$GridKeyboardDelegate {\n  isCell(node) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, focus the parent column if any\n\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') return parent.key;\n      return;\n    } // only return above row key if not header row\n\n\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') return superKey; // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key; // If focus was on a row, then focus the first column header.\n\n    return this.collection.columns[0].key;\n  }\n\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the first column\n\n    let row = this.collection.headerRows[column.level];\n\n    for (let item1 of row.childNodes) {\n      if (item1.type === 'column') return item1.key;\n    }\n  }\n\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the last column\n\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') return item.key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the next column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the previous column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null; // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // Check each of the row header cells in this row for a match\n\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell' ? cell.key : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props; // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = $lJcFS$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let delegate = $lJcFS$useMemo(() => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, layout]);\n  let id = $lJcFS$useId(props.id);\n  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);\n  let {\n    gridProps: gridProps\n  } = $lJcFS$useGrid({ ...props,\n    id: id,\n    keyboardDelegate: delegate,\n\n    getRowText(key) {\n      let added = state.collection.getItem(key);\n      if (!added) return ''; // If the row has a textValue, use that.\n\n      if (added.textValue != null) return added.textValue; // Otherwise combine the text of each of the row header columns.\n\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n\n      if (rowHeaderColumnKeys) {\n        let text = [];\n\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n          if (text.length === rowHeaderColumnKeys.size) break;\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n\n  }, state, ref1); // Override to include header rows\n\n  if (isVirtualized) gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  let {\n    column: column1,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription = $lJcFS$useMemo(() => {\n    var ref;\n    let columnName = (ref = state.collection.columns.find(c => c.key === column1)) === null || ref === void 0 ? void 0 : ref.textValue;\n    return sortDirection && column1 ? stringFormatter.format(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n  }, [sortDirection, column1, state.collection.columns]);\n  let descriptionProps = $lJcFS$useDescription(sortDescription); // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n\n  $lJcFS$useUpdateEffect(() => {\n    $lJcFS$announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n  return {\n    gridProps: $lJcFS$mergeProps(gridProps, descriptionProps, // If table is empty, make sure the table is tabbable\n    state.collection.size === 0 && {\n      tabIndex: 0\n    }, {\n      // merge sort description with long press information\n      'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n    })\n  };\n}\n\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var ref1, ref2;\n  let {\n    node: node\n  } = props;\n  let allowsSorting = node.props.allowsSorting; // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n\n  let {\n    gridCellProps: gridCellProps\n  } = $lJcFS$useGridCell({ ...props,\n    focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'\n  }, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n\n    onPress() {\n      state.sort(node.key);\n    },\n\n    ref: ref\n  }); // Needed to pick up the focusable context, enabling things like Tooltips for example\n\n  let {\n    focusableProps: focusableProps\n  } = $lJcFS$useFocusable({}, ref);\n  if (props.hasMenu) pressProps = {};\n  let ariaSort = null;\n  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;\n  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction; // aria-sort not supported in Android Talkback\n\n  if (node.props.allowsSorting && !$lJcFS$isAndroid()) ariaSort = isSortedColumn ? sortDirection : 'none';\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription;\n\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`; // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n\n    if (isSortedColumn && sortDirection && $lJcFS$isAndroid()) sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n  }\n\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  return {\n    columnHeaderProps: { ...$lJcFS$mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps, // If the table is empty, make all column headers untabbable or programatically focusable\n      state.collection.size === 0 && {\n        tabIndex: null\n      }),\n      role: 'columnheader',\n      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node\n  } = props;\n  let {\n    rowProps: rowProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridRow(props, state, ref);\n  return {\n    rowProps: { ...rowProps,\n      'aria-labelledby': $2140fb2337097f2d$export$85069b70317f543(state, node.key)\n    },\n    isPressed: isPressed\n  };\n}\n\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: 'row'\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps\n  };\n}\n\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridCell(props, state, ref);\n  let columnKey = props.node.column.key;\n\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = $lJcFS$useGridSelectionCheckbox(props, state);\n  return {\n    checkboxProps: { ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`\n    }\n  };\n}\n\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n\nfunction $e91ef4e5004e3774$export$52994e973806c219(props, state, columnState, ref) {\n  let {\n    column: item,\n    triggerRef: triggerRef,\n    isDisabled: isDisabled\n  } = props;\n  const stateRef = $lJcFS$useRef(null);\n  stateRef.current = columnState;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let id = $lJcFS$useId();\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let {\n    keyboardProps: keyboardProps\n  } = $lJcFS$useKeyboard({\n    onKeyDown: e => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault(); // switch focus back to the column header on anything that ends edit mode\n\n        $lJcFS$focusSafely(triggerRef.current);\n      }\n    }\n  });\n  const columnResizeWidthRef = $lJcFS$useRef(0);\n  const {\n    moveProps: moveProps\n  } = $lJcFS$useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n\n    onMove(e) {\n      let {\n        deltaX: deltaX,\n        deltaY: deltaY,\n        pointerType: pointerType\n      } = e;\n      if (direction === 'rtl') deltaX *= -1;\n\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) deltaX = deltaY * -1;\n        deltaX *= 10;\n      } // if moving up/down only, no need to resize\n\n\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n\n    onMoveEnd(e) {\n      let {\n        pointerType: pointerType\n      } = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') stateRef.current.onColumnResizeEnd(item);\n    }\n\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) max = Number.MAX_SAFE_INTEGER;\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal',\n    'aria-labelledby': `${id} ${$2140fb2337097f2d$export$37cd4213f2ad742e(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {\n      value: value\n    }),\n    min: min,\n    max: max,\n    value: value\n  };\n  const focusInput = $lJcFS$useCallback(() => {\n    if (ref.current) $lJcFS$focusWithoutScrolling(ref.current);\n  }, [ref]);\n\n  let onChange = e => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n    if (nextValue > currentWidth) nextValue = currentWidth + 10;else nextValue = currentWidth - 10;\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    onPressStart: e => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') return;\n\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        $lJcFS$focusSafely(triggerRef.current);\n        return;\n      }\n\n      focusInput();\n    },\n    onPress: e => {\n      if (e.pointerType === 'touch') focusInput();else if (e.pointerType !== 'virtual') $lJcFS$focusSafely(triggerRef.current);\n    }\n  });\n  return {\n    resizerProps: $lJcFS$mergeProps(keyboardProps, moveProps, pressProps),\n    inputProps: $lJcFS$mergeProps({\n      id: id,\n      onFocus: () => {\n        // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n        // call instead during focus and blur\n        stateRef.current.onColumnResizeStart(item);\n        state.setKeyboardNavigationDisabled(true);\n      },\n      onBlur: () => {\n        stateRef.current.onColumnResizeEnd(item);\n        state.setKeyboardNavigationDisabled(false);\n      },\n      onChange: onChange,\n      disabled: isDisabled\n    }, ariaProps)\n  };\n}\n\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return $lJcFS$useGridRowGroup();\n}\n\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox, $e91ef4e5004e3774$export$52994e973806c219 as useTableColumnResize };","map":{"version":3,"mappings":"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","names":["$2140fb2337097f2d$export$552312adfd451dab","WeakMap","$2140fb2337097f2d$var$normalizeKey","key","replace","$2140fb2337097f2d$export$37cd4213f2ad742e","state","columnKey","gridId","get","Error","$2140fb2337097f2d$export$19baff3266315d44","rowKey","$2140fb2337097f2d$export$85069b70317f543","collection","rowHeaderColumnKeys","map","join","$ce3de3ff2fd66848$exports","args","value","$cb80dcce530985b9$exports","$68ac86749db4c0fb$exports","$9a6cbac08487e661$exports","columnName","$c963661d89486e72$exports","$ac03861c6e8605f4$exports","$09e6b82e0d6e466a$exports","$8cc39eb66c2bf220$exports","$4e11db3c25a38112$exports","$da1e751a92575e02$exports","$1b5d6c6c47d55106$exports","$7c18ba27b86d3308$exports","$2cb40998e20e8a46$exports","$189e23eec1d6aa3a$exports","$3c5ec8e4f015dfd0$exports","$d021d50e6b315ebb$exports","$52535c35c24ec937$exports","$b37ee03672edfd1d$exports","$c7df6686b4189d56$exports","$da07fe8ec87e6b68$exports","$64b7e390f5791490$exports","$2a03621e773f1678$exports","$0a79c0aba9e5ecc6$exports","$de7b4d0f7dc86fc8$exports","$28ea7e849d77bd1c$exports","$9a09321cf046b187$exports","$5afe469a63fcac7b$exports","$2956757ac31a7ce2$exports","$cedee0e66b175529$exports","$6db19998ba4427da$exports","$166b7c9cc1adb1a1$exports","$c7ab180b401e49ff$exports","$1648ec00941567f3$exports","$b26f22384b3c1526$exports","$ae7e9c471762b4d3$exports","$0ba3c81c7f1caedd$export$da43f8f5cb04028d","$lJcFS$GridKeyboardDelegate","isCell","node","type","getKeyBelow","startItem","getItem","child","childNodes","firstKey","getFirstKey","firstItem","index","getKeyAbove","parent","parentKey","superKey","columns","findNextColumnKey","column","findNextKey","item","row","headerRows","level","item1","findPreviousColumnKey","findPreviousKey","i","length","getKeyRightOf","direction","getKeyLeftOf","getKeyForSearch","search","fromKey","collator","hasWrapped","cell","has","textValue","substring","slice","compare","fromItem","$6e31608fbba75bab$export$25bceaac3c7e4dc7","props","ref1","keyboardDelegate","isVirtualized","layout","$lJcFS$useCollator","usage","sensitivity","$lJcFS$useLocale","delegate","$lJcFS$useMemo","disabledKeys","id","$lJcFS$useId","set","gridProps","$lJcFS$useGrid","getRowText","added","text","push","size","sortDirection","sortDescriptor","stringFormatter","$lJcFS$useLocalizedStringFormatter","sortDescription","ref","find","c","column1","format","undefined","descriptionProps","$lJcFS$useDescription","$lJcFS$useUpdateEffect","$lJcFS$announce","$lJcFS$mergeProps","tabIndex","filter","Boolean","$f329116d8ad0aba0$export$9514819a8c81e960","ref2","allowsSorting","gridCellProps","$lJcFS$useGridCell","focusMode","isSelectionCell","hasMenu","isSelectionCellDisabled","selectionManager","selectionMode","pressProps","$lJcFS$usePress","isDisabled","onPress","sort","focusableProps","$lJcFS$useFocusable","ariaSort","isSortedColumn","$lJcFS$isAndroid","columnHeaderProps","role","colspan","$b2db214c022798eb$export$7f2f6ae19e707aa5","rowProps","isPressed","$lJcFS$useGridRow","$f917ee10f4c32dab$export$1b95a7d2d517b841","$7713593715703b24$export$49571c903d73624c","$2a795c53a101c542$export$16ea7f650bd7c1bb","checkboxProps","$lJcFS$useGridSelectionCheckbox","$2a795c53a101c542$export$1003db6a7e384b99","isEmpty","isSelectAll","isSelected","isIndeterminate","onChange","toggleSelectAll","$e91ef4e5004e3774$export$52994e973806c219","columnState","triggerRef","stateRef","$lJcFS$useRef","current","keyboardProps","$lJcFS$useKeyboard","onKeyDown","e","preventDefault","$lJcFS$focusSafely","columnResizeWidthRef","moveProps","$lJcFS$useMove","onMoveStart","getColumnWidth","onColumnResizeStart","onMove","deltaX","deltaY","pointerType","onColumnResize","onMoveEnd","onColumnResizeEnd","min","Math","floor","getColumnMinWidth","max","getColumnMaxWidth","Infinity","Number","MAX_SAFE_INTEGER","ariaProps","label","focusInput","$lJcFS$useCallback","$lJcFS$focusWithoutScrolling","currentWidth","nextValue","parseFloat","target","onPressStart","ctrlKey","altKey","metaKey","shiftKey","currentlyResizingColumn","resizerProps","inputProps","onFocus","setKeyboardNavigationDisabled","onBlur","disabled","$0047e6c294ea075f$export$6fb1613bd7b28198","$lJcFS$useGridRowGroup"],"sources":["/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/utils.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/ar-AE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/bg-BG.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/cs-CZ.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/da-DK.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/de-DE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/el-GR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/en-US.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/es-ES.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/et-EE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/fi-FI.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/fr-FR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/he-IL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/hr-HR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/hu-HU.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/it-IT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/ja-JP.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/ko-KR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/lt-LT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/lv-LV.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/nb-NO.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/nl-NL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/pl-PL.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/pt-BR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/pt-PT.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/ro-RO.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/ru-RU.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/sk-SK.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/sl-SI.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/sr-SP.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/sv-SE.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/tr-TR.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/uk-UA.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/zh-CN.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/zh-TW.json","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/intl/*.js","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/TableKeyboardDelegate.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTable.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableColumnHeader.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableRow.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableHeaderRow.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableCell.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableSelectionCheckbox.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/useTableColumnResize.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/table/dist/packages/@react-aria/table/src/index.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n","{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"columnSize\": \"{value} بالبكسل\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n","{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"columnSize\": \"{value} пиксела\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n","{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"columnSize\": \"{value} pixelů\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n","{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"columnSize\": \"{value} Pixel\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n","{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n","{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\",\n  \"columnSize\": \"{value} pixels\"\n}\n","{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"columnSize\": \"{value} píxeles\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n","{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"columnSize\": \"{value} pikslit\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n","{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"columnSize\": \"{value} pikseliä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n","{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n","{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"columnSize\": \"{value} פיקסלים\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n","{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"columnSize\": \"{value} képpont\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n","{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"columnSize\": \"{value} ピクセル\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n","{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"columnSize\": \"{value} 픽셀\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n","{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"columnSize\": \"{value} piks.\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n","{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"columnSize\": \"{value} pikseļi\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"columnSize\": \"{value} piksler\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n","{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n","{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"columnSize\": \"Liczba pikseli: {value}\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n","{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n","{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"columnSize\": \"{value} pixeli\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n","{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"columnSize\": \"{value} пикс.\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n","{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"columnSize\": \"Počet pixelov: {value}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n","{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"columnSize\": \"{value} slikovnih pik\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n","{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"columnSize\": \"{value} pixlar\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n","{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"columnSize\": \"{value} piksel\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n","{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"columnSize\": \"{value} пікс.\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n","{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n","{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key} from 'react';\nimport {Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of row.childNodes) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Layout} from '@react-stately/virtualizer';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport {RefObject, useMemo} from 'react';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {TableState} from '@react-stately/table';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableProps<T> extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layout?: Layout<Node<T>>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: AriaTableProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, layout]);\n  let id = useId(props.id);\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate,\n    getRowText(key): string {\n      let added = state.collection.getItem(key);\n      if (!added) {\n        return '';\n      }\n\n      // If the row has a textValue, use that.\n      if (added.textValue != null) {\n        return added.textValue;\n      }\n\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n            text.push(cell.textValue);\n          }\n\n          if (text.length === rowHeaderColumnKeys.size) {\n            break;\n          }\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {columnName}) : undefined;\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      // If table is empty, make sure the table is tabbable\n      state.collection.size === 0 && {tabIndex: 0},\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaTableColumnHeaderProps {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<unknown>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the column has a menu in the header, this changes interactions with the header.\n   * @private\n  */\n  hasMenu?: boolean\n}\n\nexport interface TableColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: AriaTableColumnHeaderProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableColumnHeaderAria {\n  let {node} = props;\n  let allowsSorting = node.props.allowsSorting;\n  // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n  let {gridCellProps} = useGridCell({...props, focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'}, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n\n  let {pressProps} = usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  if (props.hasMenu) {\n    pressProps = {};\n  }\n\n  let ariaSort: DOMAttributes['aria-sort'] = null;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(\n        gridCellProps,\n        pressProps,\n        focusableProps,\n        descriptionProps,\n        // If the table is empty, make all column headers untabbable or programatically focusable\n        state.collection.size === 0 && {tabIndex: null}\n      ),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {getRowLabelledBy} from './utils';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableCollection} from '@react-types/table';\nimport {TableState} from '@react-stately/table';\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<FocusableElement>): GridRowAria {\n  let {node} = props;\n  let {rowProps, isPressed} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {GridRowProps} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<Element>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\nexport interface AriaTableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: AriaTableCellProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface TableSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\nexport interface TableSelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: AriaTableSelectionCheckboxProps, state: TableState<T>): TableSelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): TableSelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ChangeEvent, RefObject, useCallback, useRef} from 'react';\nimport {DOMAttributes, MoveEndEvent, MoveMoveEvent} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, useId} from '@react-aria/utils';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {TableColumnResizeState, TableState} from '@react-stately/table';\nimport {useKeyboard, useMove, usePress} from '@react-aria/interactions';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface TableColumnResizeAria {\n  inputProps: DOMAttributes,\n  resizerProps: DOMAttributes\n}\n\nexport interface AriaTableColumnResizeProps<T> {\n  column: GridNode<T>,\n  label: string,\n  triggerRef: RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  onMove: (e: MoveMoveEvent) => void,\n  onMoveEnd: (e: MoveEndEvent) => void\n}\n\nexport function useTableColumnResize<T>(props: AriaTableColumnResizeProps<T>, state: TableState<T>, columnState: TableColumnResizeState<T>, ref: RefObject<HTMLInputElement>): TableColumnResizeAria {\n  let {column: item, triggerRef, isDisabled} = props;\n  const stateRef = useRef<TableColumnResizeState<T>>(null);\n  stateRef.current = columnState;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let id = useId();\n\n  let {direction} = useLocale();\n  let {keyboardProps} = useKeyboard({\n    onKeyDown: (e) => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault();\n        // switch focus back to the column header on anything that ends edit mode\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  const columnResizeWidthRef = useRef<number>(0);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n    onMove(e) {\n      let {deltaX, deltaY, pointerType} = e;\n      if (direction === 'rtl') {\n        deltaX *= -1;\n      }\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) {\n          deltaX = deltaY * -1;\n        }\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n    onMoveEnd(e) {\n      let {pointerType} = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') {\n        stateRef.current.onColumnResizeEnd(item);\n      }\n    }\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) {\n    max = Number.MAX_SAFE_INTEGER;\n  }\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal' as 'horizontal',\n    'aria-labelledby': `${id} ${getColumnHeaderId(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {value}),\n    min,\n    max,\n    value\n  };\n\n  const focusInput = useCallback(() => {\n    if (ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  }, [ref]);\n\n  let onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n\n    if (nextValue > currentWidth) {\n      nextValue = currentWidth + 10;\n    } else {\n      nextValue = currentWidth - 10;\n    }\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n\n  let {pressProps} = usePress({\n    onPressStart: (e) => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') {\n        return;\n      }\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        focusSafely(triggerRef.current);\n        return;\n      }\n      focusInput();\n    },\n    onPress: (e) => {\n      if (e.pointerType === 'touch') {\n        focusInput();\n      } else if (e.pointerType !== 'virtual') {\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  return {\n    resizerProps: mergeProps(\n      keyboardProps,\n      moveProps,\n      pressProps\n    ),\n    inputProps: mergeProps(\n      {\n        id,\n        onFocus: () => {\n          // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n          // call instead during focus and blur\n          stateRef.current.onColumnResizeStart(item);\n          state.setKeyboardNavigationDisabled(true);\n        },\n        onBlur: () => {\n          stateRef.current.onColumnResizeEnd(item);\n          state.setKeyboardNavigationDisabled(false);\n        },\n        onChange,\n        disabled: isDisabled\n      },\n      ariaProps\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useTable} from './useTable';\nexport {useTableColumnHeader} from './useTableColumnHeader';\nexport {useTableRow} from './useTableRow';\nexport {useTableHeaderRow} from './useTableHeaderRow';\nexport {useTableCell} from './useTableCell';\nexport {useTableSelectionCheckbox, useTableSelectAllCheckbox} from './useTableSelectionCheckbox';\nexport {useTableColumnResize} from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n\nexport type {AriaTableProps} from './useTable';\nexport type {GridAria, GridRowAria, GridRowProps} from '@react-aria/grid';\nexport type {AriaTableColumnHeaderProps, TableColumnHeaderAria} from './useTableColumnHeader';\nexport type {AriaTableCellProps, TableCellAria} from './useTableCell';\nexport type {TableHeaderRowAria} from './useTableHeaderRow';\nexport type {AriaTableSelectionCheckboxProps, TableSelectionCheckboxAria, TableSelectAllCheckboxAria} from './useTableSelectionCheckbox';\nexport type {AriaTableColumnResizeProps, TableColumnResizeAria} from './useTableColumnResize';\n"]},"metadata":{},"sourceType":"module"}