{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\n/* Inspired by https://github.com/AlmeroSteyn/react-aria-live */\nconst $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7000;\nlet $319e236875307eab$var$liveAnnouncer = null;\n\nfunction $319e236875307eab$export$a9b970dcc4ae71a9(message) {\n  let assertiveness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"assertive\";\n  let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY;\n  if (!$319e236875307eab$var$liveAnnouncer) $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();\n  $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);\n}\n\nfunction $319e236875307eab$export$d10ae4f68404609a(assertiveness) {\n  if ($319e236875307eab$var$liveAnnouncer) $319e236875307eab$var$liveAnnouncer.clear(assertiveness);\n}\n\nfunction $319e236875307eab$export$d8686216b8b81b2f() {\n  if ($319e236875307eab$var$liveAnnouncer) {\n    $319e236875307eab$var$liveAnnouncer.destroy();\n    $319e236875307eab$var$liveAnnouncer = null;\n  }\n} // LiveAnnouncer is implemented using vanilla DOM, not React. That's because as of React 18\n// ReactDOM.render is deprecated, and the replacement, ReactDOM.createRoot is moved into a\n// subpath import `react-dom/client`. That makes it hard for us to support multiple React versions.\n// As a global API, we can't use portals without introducing a breaking API change. LiveAnnouncer\n// is simple enough to implement without React, so that's what we do here.\n// See this discussion for more details: https://github.com/reactwg/react-18/discussions/125#discussioncomment-2382638\n\n\nclass $319e236875307eab$var$LiveAnnouncer {\n  createLog(ariaLive) {\n    let node = document.createElement(\"div\");\n    node.setAttribute(\"role\", \"log\");\n    node.setAttribute(\"aria-live\", ariaLive);\n    node.setAttribute(\"aria-relevant\", \"additions\");\n    return node;\n  }\n\n  destroy() {\n    if (!this.node) return;\n    document.body.removeChild(this.node);\n    this.node = null;\n  }\n\n  announce(message) {\n    let assertiveness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"assertive\";\n    let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY;\n    if (!this.node) return;\n    let node = document.createElement(\"div\");\n    node.textContent = message;\n    if (assertiveness === \"assertive\") this.assertiveLog.appendChild(node);else this.politeLog.appendChild(node);\n    if (message !== \"\") setTimeout(() => {\n      node.remove();\n    }, timeout);\n  }\n\n  clear(assertiveness) {\n    if (!this.node) return;\n    if (!assertiveness || assertiveness === \"assertive\") this.assertiveLog.innerHTML = \"\";\n    if (!assertiveness || assertiveness === \"polite\") this.politeLog.innerHTML = \"\";\n  }\n\n  constructor() {\n    this.node = document.createElement(\"div\");\n    this.node.dataset.liveAnnouncer = \"true\"; // copied from VisuallyHidden\n\n    Object.assign(this.node.style, {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      clipPath: \"inset(50%)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      whiteSpace: \"nowrap\"\n    });\n    this.assertiveLog = this.createLog(\"assertive\");\n    this.node.appendChild(this.assertiveLog);\n    this.politeLog = this.createLog(\"polite\");\n    this.node.appendChild(this.politeLog);\n    document.body.prepend(this.node);\n  }\n\n}\n\nexport { $319e236875307eab$export$a9b970dcc4ae71a9 as announce, $319e236875307eab$export$d10ae4f68404609a as clearAnnouncer, $319e236875307eab$export$d8686216b8b81b2f as destroyAnnouncer };","map":{"version":3,"mappings":"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","names":["$319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY","$319e236875307eab$var$liveAnnouncer","$319e236875307eab$export$a9b970dcc4ae71a9","message","assertiveness","timeout","$319e236875307eab$var$LiveAnnouncer","announce","$319e236875307eab$export$d10ae4f68404609a","clear","$319e236875307eab$export$d8686216b8b81b2f","destroy","createLog","ariaLive","node","document","createElement","setAttribute","body","removeChild","textContent","assertiveLog","appendChild","politeLog","setTimeout","remove","innerHTML","constructor","dataset","liveAnnouncer","Object","assign","style","border","clip","clipPath","height","margin","overflow","padding","position","width","whiteSpace","prepend"],"sources":["/Users/vux/dev/react-project1/node_modules/@react-aria/live-announcer/dist/packages/@react-aria/live-announcer/src/index.ts","/Users/vux/dev/react-project1/node_modules/@react-aria/live-announcer/dist/packages/@react-aria/live-announcer/src/LiveAnnouncer.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {announce, clearAnnouncer, destroyAnnouncer} from './LiveAnnouncer';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\ntype Assertiveness = 'assertive' | 'polite';\n\n/* Inspired by https://github.com/AlmeroSteyn/react-aria-live */\nconst LIVEREGION_TIMEOUT_DELAY = 7000;\n\nlet liveAnnouncer: LiveAnnouncer | null = null;\n\n/**\n * Announces the message using screen reader technology.\n */\nexport function announce(\n  message: string,\n  assertiveness: Assertiveness = 'assertive',\n  timeout = LIVEREGION_TIMEOUT_DELAY\n) {\n  if (!liveAnnouncer) {\n    liveAnnouncer = new LiveAnnouncer();\n  }\n\n  liveAnnouncer.announce(message, assertiveness, timeout);\n}\n\n/**\n * Stops all queued announcements.\n */\nexport function clearAnnouncer(assertiveness: Assertiveness) {\n  if (liveAnnouncer) {\n    liveAnnouncer.clear(assertiveness);\n  }\n}\n\n/**\n * Removes the announcer from the DOM.\n */\nexport function destroyAnnouncer() {\n  if (liveAnnouncer) {\n    liveAnnouncer.destroy();\n    liveAnnouncer = null;\n  }\n}\n\n// LiveAnnouncer is implemented using vanilla DOM, not React. That's because as of React 18\n// ReactDOM.render is deprecated, and the replacement, ReactDOM.createRoot is moved into a\n// subpath import `react-dom/client`. That makes it hard for us to support multiple React versions.\n// As a global API, we can't use portals without introducing a breaking API change. LiveAnnouncer\n// is simple enough to implement without React, so that's what we do here.\n// See this discussion for more details: https://github.com/reactwg/react-18/discussions/125#discussioncomment-2382638\nclass LiveAnnouncer {\n  node: HTMLElement | null;\n  assertiveLog: HTMLElement;\n  politeLog: HTMLElement;\n\n  constructor() {\n    this.node = document.createElement('div');\n    this.node.dataset.liveAnnouncer = 'true';\n    // copied from VisuallyHidden\n    Object.assign(this.node.style, {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      clipPath: 'inset(50%)',\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      width: '1px',\n      whiteSpace: 'nowrap'\n    });\n\n    this.assertiveLog = this.createLog('assertive');\n    this.node.appendChild(this.assertiveLog);\n\n    this.politeLog = this.createLog('polite');\n    this.node.appendChild(this.politeLog);\n\n    document.body.prepend(this.node);\n  }\n\n  createLog(ariaLive: string) {\n    let node = document.createElement('div');\n    node.setAttribute('role', 'log');\n    node.setAttribute('aria-live', ariaLive);\n    node.setAttribute('aria-relevant', 'additions');\n    return node;\n  }\n\n  destroy() {\n    if (!this.node) {\n      return;\n    }\n\n    document.body.removeChild(this.node);\n    this.node = null;\n  }\n\n  announce(message: string, assertiveness = 'assertive', timeout = LIVEREGION_TIMEOUT_DELAY) {\n    if (!this.node) {\n      return;\n    }\n\n    let node = document.createElement('div');\n    node.textContent = message;\n\n    if (assertiveness === 'assertive') {\n      this.assertiveLog.appendChild(node);\n    } else {\n      this.politeLog.appendChild(node);\n    }\n\n    if (message !== '') {\n      setTimeout(() => {\n        node.remove();\n      }, timeout);\n    }\n  }\n\n  clear(assertiveness: Assertiveness) {\n    if (!this.node) {\n      return;\n    }\n\n    if (!assertiveness || assertiveness === 'assertive') {\n      this.assertiveLog.innerHTML = '';\n    }\n\n    if (!assertiveness || assertiveness === 'polite') {\n      this.politeLog.innerHTML = '';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}